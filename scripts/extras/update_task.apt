#!/bin/bash

##
# Installation process creates a link file, named "scripts/tasks/update".
#
# It may either be called by Fledge scheduler for updating Fledge package and it may also be called
# manually via /usr/local/fledge/bin/fledge_update script.
#
# Pre-requisites:
# 1. Add the repository key to your apt key list:
#        wget -q -O - http://archives.fledge-iot.org/KEY.gpg | sudo apt-key add -
# 2. Add the repository location to your sources list.
#    Add the following lines to your "/etc/apt/sources.list" file.
#        deb http://archives.fledge-iot.org/ /
##

__author__="Amarendra K Sinha"
__copyright__="Copyright (c) 2018 OSIsoft, LLC"
__license__="Apache 2.0"
__version__="1.1"


# Set the default value for FLEDGE_ROOT if not set
if [ "${FLEDGE_ROOT}" = "" ]; then
	export FLEDGE_ROOT='/usr/local/fledge'
fi


# Include logging: it works only with bash
. "${FLEDGE_ROOT}/scripts/common/write_log.sh" || exit 1

# Ignore signals: 1-SIGHUP, 2-SIGINT, 3-SIGQUIT, 6-SIGABRT, 15-SIGTERM
trap "" 1 2 3 6 15


# Check availability of FLEDGE_ROOT directory
if [ ! -d "${FLEDGE_ROOT}" ]; then
        logger -p local0.err -t "Fledge[${$}]" "${TASK_NAME} $0 home directory missing or incorrectly set environment"
        exit 1
fi

# Add fledge python path to PYTHONPATH
export PYTHONPATH="${PYTHONPATH}:${FLEDGE_ROOT}/scripts/common"

# Stop Fledge

STOP_FLEDGE_CMD="${FLEDGE_ROOT}/bin/fledge stop"
STOP_FLEDGE_CMD_STATUS=`$STOP_FLEDGE_CMD`
sleep 15
if [ "${STOP_FLEDGE_CMD_STATUS}" = "" ]; then
    logger -p local0.err -t "Fledge[${$}]" "err" "${TASK_NAME} $0: cannot run \"${STOP_FLEDGE_CMD}\" command"
    exit 1
fi


# Now run Fledge update commands.
UPDATE_CMD="sudo apt -y update"
FLEDGE_UPDATE_CMD="sudo apt-get -y install fledge"


# Update apt-get
logger -p local0.err -t "Fledge[${$}]" "$TASK_NAME $0: Starting ${UPDATE_CMD} command"
UPDATE_CMD_OUT=`$UPDATE_CMD`
UPDATE_CMD_STATUS="$?"
if [ "$UPDATE_CMD_STATUS" != "0" ]; then
    logger -p local0.err -t "Fledge[${$}]" "$TASK_NAME $0: Error: $UPDATE_CMD. Exit: $UPDATE_CMD_STATUS. Out: $UPDATE_CMD_OUT"
    exit 1
fi


# Update Fledge
logger -p local0.err -t "Fledge[${$}]" "$TASK_NAME $0: Starting ${FLEDGE_UPDATE_CMD} command"
FLEDGE_UPDATE_CMD_OUT=`$FLEDGE_UPDATE_CMD`
FLEDGE_UPDATE_CMD_STATUS="$?"
if [ "$FLEDGE_UPDATE_CMD_STATUS" != "0" ]; then
    logger -p local0.err -t "Fledge[${$}]" "$TASK_NAME $0: Error: $FLEDGE_UPDATE_CMD. Exit: $FLEDGE_UPDATE_CMD_STATUS. Out: $FLEDGE_UPDATE_CMD_OUT"
    exit 1
fi


# Start Fledge

START_FLEDGE_CMD="${FLEDGE_ROOT}/bin/fledge start"
START_FLEDGE_CMD_OUT=`$START_FLEDGE_CMD`
START_FLEDGE_CMD_STATUS="$?"
if [ "$START_FLEDGE_CMD_OUT" = "" ]; then
    logger -p local0.err -t "Fledge[${$}]" "$TASK_NAME $0: Error: $START_FLEDGE_CMD. Exit: $START_FLEDGE_CMD_STATUS. Out: $START_FLEDGE_CMD_OUT"
    exit 1
fi

logger -p local0.err -t "Fledge[${$}]" "${TASK_NAME} $0: Fledge updated successfully!"
echo "Fledge updated successfully!"
