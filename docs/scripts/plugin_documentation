#!/bin/bash

# The best default branch to use develop rather than master. As new repository do not have a branch called master any more and having main branch only.
if [[ "${DOCBRANCH}" == "" ]]; then
    # NOTE: During release time we need to replace develop with actual released version
	export DOCBRANCH=develop
	echo "Default ${DOCBRANCH} used for plugin documentation"
fi

function plugin_doc {
  repo_name=$1
  dest=$2
  product=`echo ${repo_name} | sed -e 's/-.*//'`
  org=fledge-iot
  type=`echo ${repo_name} | sed -e 's/fledge-//' -e 's/-.*//'`
  name=`echo ${repo_name} | sed -e 's/fledge-//' -e "s/${type}-//"`
  mkdir -p /tmp/doc.$$
  cd /tmp/doc.$$
  git clone -b ${DOCBRANCH} --single-branch https://github.com/${org}/${repo_name}.git
  # cloned directory replaced with installed directory name which is defined in Package file for each repo
  installed_plugin_dir_name=`cat ${repo_name}/Package | grep plugin_install_dirname= | sed -e "s/plugin_install_dirname=//g"`
  if [[ ${installed_plugin_dir_name} == "\${plugin_name}" ]]; then
      installed_plugin_dir_name=`cat ${repo_name}/Package | grep plugin_name= | sed -e "s/plugin_name=//g"`
  fi
  old_plugin_name=`echo ${repo_name} | cut -d '-' -f3-`
  new_plugin_name=`echo ${repo_name/$old_plugin_name/$installed_plugin_dir_name}`
  if [[ ${repo_name} != ${new_plugin_name} ]]; then
      mv ${repo_name} ${new_plugin_name}
  fi
  repo_name=${new_plugin_name}
  cd -
  if [ -d /tmp/doc.$$/${repo_name}/docs ]; then
    rm -rf plugins/${repo_name}
    mkdir -p plugins/${repo_name}
    cp -r /tmp/doc.$$/${repo_name}/docs/. plugins/${repo_name}
    if [ -f plugins/${repo_name}/index.rst ]; then
        echo "    ${repo_name}/index" >> $dest
    else
        files=`ls ${repo_name}/*.rst`
        file=`basename $files .rst`
        echo "    ${repo_name}/${file}" >> $dest
    fi
  fi
  rm -rf /tmp/doc.$$
}

# Always create a fresh set of documentation
if [ -d plugins ]; then
	rm -rf plugins
fi
mkdir plugins

cat > plugins/south.rst << EOFSOUTH
********************
Fledge South Plugins
********************

.. toctree::

EOFSOUTH
cat > plugins/north.rst << EOFNORTH
********************
Fledge North Plugins
********************

.. toctree::

    ../fledge-north-OMF
EOFNORTH
cat > plugins/filter.rst << EOFFILTER
*********************
Fledge Filter Plugins
*********************

.. toctree::

EOFFILTER
cat > plugins/rule.rst << EOFRULE
********************************
Fledge Notification Rule Plugins
********************************

.. toctree::

EOFRULE
cat > plugins/notify.rst << EOFNOTIFY
************************************
Fledge Notification Delivery Plugins
************************************

.. toctree::

EOFNOTIFY

fledgeRepos=`curl -s  https://api.github.com/orgs/fledge-iot/repos\?page=[1-3]`
fledgeRepos="$(echo $fledgeRepos | sed 's/\] \[/,/g')"
REPOSITORIES=`echo $fledgeRepos | python3 -c 'import json,sys;repos=json.load(sys.stdin);fRepos = [r["name"] for r in repos];print("\n".join(fRepos))' | sort -f`
echo ${REPOSITORIES}
for repo in ${REPOSITORIES}
do
  type=`echo $repo | sed -e 's/fledge-//' -e 's/foglamp-//' -e 's/-.*//'`
  if [ "$type" = "south" -o "$type" = "north" -o $type = "filter" -o $type = "rule" -o $type = "notify" ]; then
      dest=plugins/${type}.rst
      plugin_doc $repo $dest
  fi
done
