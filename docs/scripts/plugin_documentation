#!/bin/bash

# The best default branch to use develop rather than master. As new repository do not have a branch called master any more and having main branch only.
if [[ "${DOCBRANCH}" == "" ]]; then
    # NOTE: During release time we need to replace develop with actual released version
	export DOCBRANCH=develop
	echo "Default ${DOCBRANCH} used for plugin documentation"
fi

function plugin_doc {
  repo_name=$1
  dest=$2
  product=`echo ${repo_name} | sed -e 's/-.*//'`
  org=fledge-iot
  type=`echo ${repo_name} | sed -e 's/fledge-//' -e 's/-.*//'`
  name=`echo ${repo_name} | sed -e 's/fledge-//' -e "s/${type}-//"`
  mkdir -p /tmp/doc.$$
  cd /tmp/doc.$$
  git clone -b ${DOCBRANCH} --single-branch https://github.com/${org}/${repo_name}.git
  # cloned directory replaced with installed directory name which is defined in Package file for each repo
  installed_plugin_dir_name=`cat ${repo_name}/Package | grep plugin_install_dirname= | sed -e "s/plugin_install_dirname=//g"`
  if [[ ${installed_plugin_dir_name} == "\${plugin_name}" ]]; then
      installed_plugin_dir_name=`cat ${repo_name}/Package | grep plugin_name= | sed -e "s/plugin_name=//g"`
  fi
  old_plugin_name=`echo ${repo_name} | cut -d '-' -f3-`
  new_plugin_name=`echo ${repo_name/$old_plugin_name/$installed_plugin_dir_name}`
  if [[ ${repo_name} != ${new_plugin_name} ]]; then
      mv ${repo_name} ${new_plugin_name}
  fi
  repo_name=${new_plugin_name}
  cd -
  if [ -d /tmp/doc.$$/${repo_name}/docs ]; then
    rm -rf plugins/${repo_name}
    mkdir -p plugins/${repo_name}
    cp -r /tmp/doc.$$/${repo_name}/docs/. plugins/${repo_name}
    if [ -f plugins/${repo_name}/index.rst ]; then
        echo "    ${repo_name}/index" >> $dest
    else
        files=`ls ${repo_name}/*.rst`
    	if [ "$files" = "" ]; then
	    echo "*** WARNING: plugin ${repo_name} is missing documentation"
        else
            file=`basename $files .rst`
            echo "    ${repo_name}/${file}" >> $dest
        fi
    fi
  fi
  rm -rf /tmp/doc.$$
}

# Always create a fresh set of documentation
if [ -d plugins ]; then
	rm -rf plugins
fi
mkdir plugins

cat > plugins/south.rst << EOFSOUTH
********************
Fledge South Plugins
********************

.. toctree::

EOFSOUTH
cat > plugins/north.rst << EOFNORTH
********************
Fledge North Plugins
********************

.. toctree::

    fledge-north-OMF/index
EOFNORTH
cat > plugins/filter.rst << EOFFILTER
*********************
Fledge Filter Plugins
*********************

.. toctree::

EOFFILTER
cat > plugins/rule.rst << EOFRULE
********************************
Fledge Notification Rule Plugins
********************************

.. toctree::

    fledge-rule-Threshold/index
EOFRULE
cat > plugins/notify.rst << EOFNOTIFY
************************************
Fledge Notification Delivery Plugins
************************************

.. toctree::

EOFNOTIFY

fledgeRepos=$(curl -sX GET https://api.github.com/orgs/fledge-iot/repos\?per_page=1000)
fetchTopicReposPyScript='
import json,sys;\
repos=json.load(sys.stdin);\
fRepos = [r["name"] for r in repos["items"]];\
print("\n".join(fRepos));
'
fledge_wip_repos=$(curl -sX GET -H "Accept: application/vnd.github.mercy-preview+json" https://api.github.com/search/repositories?q=topic:wip+org:fledge-iot)
fledge_poc_repos=$(curl -sX GET -H "Accept: application/vnd.github.mercy-preview+json" https://api.github.com/search/repositories?q=topic:poc+org:fledge-iot)
fledge_internal_repos=$(curl -sX GET -H "Accept: application/vnd.github.mercy-preview+json" https://api.github.com/search/repositories?q=internal:wip+org:fledge-iot)
fledge_wip_repos_name=$(echo ${fledge_wip_repos} | python3 -c "$fetchTopicReposPyScript" | sort -f)
fledge_poc_repos_name=$(echo ${fledge_poc_repos} | python3 -c "$fetchTopicReposPyScript" | sort -f)
fledge_internal_repos_name=$(echo ${fledge_internal_repos} | python3 -c "$fetchTopicReposPyScript" | sort -f)
EXCLUDE_FLEDGE_TOPIC_REPOSITORIES=$(echo ${fledge_wip_repos_name} ${fledge_poc_repos_name} ${fledge_internal_repos_name} | sort -f)
echo "EXCLUDED FLEDGE TOPIC REPOS..."$EXCLUDE_FLEDGE_TOPIC_REPOSITORIES
export EXCLUDE_FLEDGE_TOPIC_REPOSITORIES=$EXCLUDE_FLEDGE_TOPIC_REPOSITORIES
fetchFledgeReposPyScript='
import os,json,sys;\
repos=json.load(sys.stdin);\
exclude_topic_packages=os.environ["EXCLUDE_FLEDGE_TOPIC_REPOSITORIES"];\
fRepos = [r["name"] for r in repos if r["name"] not in exclude_topic_packages];\
print("\n".join(fRepos));
'
REPOSITORIES=$(echo ${fledgeRepos} | python3 -c "$fetchFledgeReposPyScript" | sort -f)
echo "REPOS LIST: "${REPOSITORIES}
for repo in ${REPOSITORIES}
do
  type=`echo $repo | sed -e 's/fledge-//' -e 's/foglamp-//' -e 's/-.*//'`
  if [ "$type" = "south" -o "$type" = "north" -o $type = "filter" -o $type = "rule" -o $type = "notify" ]; then
      dest=plugins/${type}.rst
      plugin_doc $repo $dest
  fi
done

# Deal with bultin plugin documentation 
mkdir plugins/fledge-north-OMF
ln -s ../../images plugins/fledge-north-OMF/images
sed -e 's|OMF.rst|../../OMF.rst|' < fledge-north-OMF.rst > plugins/fledge-north-OMF/index.rst
mkdir plugins/fledge-rule-Threshold
cp -r fledge-rule-Threshold/* plugins/fledge-rule-Threshold/.
