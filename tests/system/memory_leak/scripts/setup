#!/usr/bin/env bash

set -e


Branch=$2   #here Branch means branch of fledge repository that is needed to be scanned, default is devops


OS_NAME=`(grep -o '^NAME=.*' /etc/os-release | cut -f2 -d\" | sed 's/"//g')`
ID=$(cat /etc/os-release | grep -w ID | cut -f2 -d"=" | tr -d '"')
UNAME=`uname -m`
VERSION_ID=$(cat /etc/os-release | grep -w VERSION_ID | cut -f2 -d"=" |  tr -d '"')
echo "version id is "${VERSION_ID}

if [[ ${ID} = "ubuntu" ]]; then
        VERSION_ID=$(echo "${VERSION_ID//.}")
        ID="ubuntu${VERSION_ID}";
elif [[ ${ID} = "raspbian" ]]; then
	ID=$(cat /etc/os-release | grep VERSION_CODENAME | cut -f2 -d"=")
        UNAME="armv7l"
fi

echo "Build version is "${PACKAGE_BUILD_VERSION}
echo "ID is "${ID}
echo "uname is "${UNAME}


# installing pre requisite package - git, for cloning fledge non package
sudo apt -y  install git

#cloneing fledge
git clone -b $Branch https://github.com/fledge-iot/fledge.git &&  cd fledge && chmod +x requirements.sh && sh -x requirements.sh ;


echo 'Changing CMakelists'
sed -i 's|c++11 -O3|c++11 -O0 -ggdb|g' CMakeLists.txt && make 

echo '----------------------------------'
echo
cat CMakeLists.txt
echo 
echo '----------------------------------'
echo 'CMakeLists.txt changed'

#exporting fledge path and changing directory to location where plugin repositories will be cloned and removed once the test is finished
export FLEDGE_ROOT=`pwd` && cd ..; 

#modifying script

echo 'fledge root path is set to  ${FLEDGE_ROOT}'

valgrind_conf=' --tool=memcheck  --fullpath-after=  --xml=yes  --log-file=\/tmp\/south_valgrind.log --child-silent-after-fork=no --leak-check=full --show-leak-kinds=all --track-origins=yes '

psouth_c=${FLEDGE_ROOT}/scripts/services/south_c
echo $psouth_c

sudo sed -i 's#/usr/local/fledge#'"$FLEDGE_ROOT"'#g' ${psouth_c}

sudo sed -i '/.\/fledge.services.south.*/s/^/valgrind -v --xml-file=\/tmp\/south_valgrind_%p.xml  '"$valgrind_conf"'  /' ${psouth_c}

pnorth_C=${FLEDGE_ROOT}/scripts/services/north_C
echo $pnorth_C

sudo sed -i 's#/usr/local/fledge#'"$FLEDGE_ROOT"'#g' ${pnorth_C}

sudo sed -i '/.\/fledge.services.north.*/s/^/valgrind -v  --xml-file=\/tmp\/north_valgrind_%p.xml '"$valgrind_conf"'  /' ${pnorth_C}

pstorage=${FLEDGE_ROOT}/scripts/services/storage
echo $pstorage

sudo sed -i 's#/usr/local/fledge#'"$FLEDGE_ROOT"'#g' ${pstorage}

sudo sed -i '/\${storageExec} \"\$@\"/s/^/valgrind -v   --xml-file=\/tmp\/storage_valgrind_%p.xml '"$valgrind_conf"'  /' ${pstorage}

#cloning plugins based on parameters passed to the script

install_reuirements_Sh(){
if [[ -f ${plugin_dir}/requirements.sh  ]]
then
	./${plugin_dir}/requirements.sh
fi
}



for i in ${1}
do
	echo $i
	git clone  https://github.com/fledge-iot/${i}.git && cd ${i}; plugin_dir=`pwd`

	#checking  CMakeLists.txt exists or not, to confirm whther it is a C based plugin or python based plugin
	if [[ -f  ${plugin_dir}/CMakeLists.txt ]]
	then
		sed -i 's|c++11 -O3|c++11 -O0 -ggdb|g'  ${plugin_dir}/CMakeLists.txt
		#Cheking requirements.sh file exists or not, to install plugins dependencies
		
		install_reuirements_Sh

		#building C based plugin
		echo 'Building C plugin'
		mkdir -p build && cd build && cmake -DFLEDGE_INSTALL=${FLEDGE_ROOT} -DFLEDGE_ROOT=${FLEDGE_ROOT} .. && make  && make install && cd ../../ ;
	else 
		#Checking requirements.txt file exists or not, to install plugins dependency (if any)
		if [[ -f ${plugin_dir}/requirements.txt  ]]
		then
			python3 -m pip install -r ${plugin_dir}/requirements.txt
		fi

		install_reuirements_Sh
		
		#checking whether plugin is south bound plugin or north bound plugin
		echo 'Copying plugin'
		if [[ $plugin_dir == *"south"* ]]
		then
			sudo cp -r python/fledge/plugins/south/*  ${FLEDGE_ROOT}/python/fledge/plugins/south/
		elif [[ $plugin_dir == *"north"* ]]
		then
			 sudo cp -r python/fledge/plugins/north/*  ${FLEDGE_ROOT}/python/fledge/plugins/north/
		fi
		cd ../..
	fi
done

echo 'Current location - '; pwd;

echo 'End of setup'
