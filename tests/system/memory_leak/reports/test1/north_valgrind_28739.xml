<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./fledge.services.north --port=39863 --address=127.0.0.1 --token=XsbGpGrNsZCwQLROPfHGUmvTtuLVXEPf --name=PI Server</line>
</preamble>

<pid>28739</pid>
<ppid>28735</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>-v</arg>
    <arg>--xml-file=/tmp/north_valgrind_%p.xml</arg>
    <arg>--tool=memcheck</arg>
    <arg>--fullpath-after=</arg>
    <arg>--xml=yes</arg>
    <arg>--log-file=/tmp/south_valgrind.log</arg>
    <arg>--child-silent-after-fork=no</arg>
    <arg>--leak-check=full</arg>
    <arg>--show-leak-kinds=all</arg>
    <arg>--track-origins=yes</arg>
  </vargv>
  <argv>
    <exe>./fledge.services.north</exe>
    <arg>--port=39863</arg>
    <arg>--address=127.0.0.1</arg>
    <arg>--token=XsbGpGrNsZCwQLROPfHGUmvTtuLVXEPf</arg>
    <arg>--name=PI Server</arg>
  </argv>
</args>


<status>
  <state>FINISHED</state>
  <time>00:00:01:10.540 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>1 bytes in 1 blocks are still reachable in loss record 1 of 149</text>
    <leakedbytes>1</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x24EFDC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Expand&lt;rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; &gt;(unsigned long)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson/internal</dir>
      <file>stack.h</file>
      <line>187</line>
    </frame>
    <frame>
      <ip>0x24E401</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Reserve&lt;rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; &gt;(unsigned long)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson/internal</dir>
      <file>stack.h</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x24C4AA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt;* rapidjson::internal::Stack&lt;rapidjson::CrtAllocator&gt;::Push&lt;rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; &gt;(unsigned long)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson/internal</dir>
      <file>stack.h</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x249018</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::StartObject()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>2432</line>
    </frame>
    <frame>
      <ip>0x245060</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseObject&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>743</line>
    </frame>
    <frame>
      <ip>0x2412F4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseValue&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>1729</line>
    </frame>
    <frame>
      <ip>0x23D476</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::ParseResult rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::Parse&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>574</line>
    </frame>
    <frame>
      <ip>0x2381AB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp; rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::ParseStream&lt;0u, rapidjson::UTF8&lt;char&gt;, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>2234</line>
    </frame>
    <frame>
      <ip>0x231742</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp; rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::Parse&lt;0u, rapidjson::UTF8&lt;char&gt; &gt;(rapidjson::UTF8&lt;char&gt;::Ch const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>2299</line>
    </frame>
    <frame>
      <ip>0x22B9F8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp; rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::Parse&lt;0u&gt;(char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>2308</line>
    </frame>
    <frame>
      <ip>0x225456</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::Parse(char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>2315</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>1 bytes in 1 blocks are still reachable in loss record 2 of 149</text>
    <leakedbytes>1</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x22B53E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;::AddChunk(unsigned long)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>allocators.h</file>
      <line>239</line>
    </frame>
    <frame>
      <ip>0x224B0C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;::Malloc(unsigned long)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>allocators.h</file>
      <line>182</line>
    </frame>
    <frame>
      <ip>0x224DAF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt;::SetStringRaw(rapidjson::GenericStringRef&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>2047</line>
    </frame>
    <frame>
      <ip>0x24C915</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt;::GenericValue(char const*, unsigned int, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>744</line>
    </frame>
    <frame>
      <ip>0x2492ED</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::String(char const*, unsigned int, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>2426</line>
    </frame>
    <frame>
      <ip>0x244F35</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseString&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>981</line>
    </frame>
    <frame>
      <ip>0x2412DB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseValue&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>1728</line>
    </frame>
    <frame>
      <ip>0x24538C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseObject&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>771</line>
    </frame>
    <frame>
      <ip>0x2412F4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseValue&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>1729</line>
    </frame>
    <frame>
      <ip>0x24538C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseObject&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>771</line>
    </frame>
    <frame>
      <ip>0x2412F4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void rapidjson::GenericReader&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::UTF8&lt;char&gt;, rapidjson::CrtAllocator&gt;::ParseValue&lt;0u, rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt; &gt;(rapidjson::GenericStringStream&lt;rapidjson::UTF8&lt;char&gt; &gt;&amp;, rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>reader.h</file>
      <line>1729</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 3 of 149</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AC4D91</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::ServerBase(unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>531</line>
    </frame>
    <frame>
      <ip>0x5AC1B64</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Server()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>813</line>
    </frame>
    <frame>
      <ip>0x5AB4DFB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 4 of 149</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AB53CE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::start()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x2093B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>311</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 5 of 149</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x21E956</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::ClientBase(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x21AF67</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Client(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>820</line>
    </frame>
    <frame>
      <ip>0x5620E76</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::getHttpClient()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x21FE89</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x20967E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>332</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 6 of 149</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x2193C4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::resolver_service_base(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>43</line>
    </frame>
    <frame>
      <ip>0x24FF12</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service&lt;boost::asio::ip::tcp&gt;::resolver_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>resolver_service.hpp</file>
      <line>54</line>
    </frame>
    <frame>
      <ip>0x24F9DE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;::resolver_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>resolver_service.hpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x24F1E4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x24E837</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x24D404</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x24A46A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_io_object&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;, false&gt;::basic_io_object(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_io_object.hpp</file>
      <line>91</line>
    </frame>
    <frame>
      <ip>0x247460</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_resolver(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>68</line>
    </frame>
    <frame>
      <ip>0x24221F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::construct&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, boost::asio::io_service&amp;&gt;(boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;*, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x23EDD7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt; &gt;::construct&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, boost::asio::io_service&amp;&gt;(std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;&amp;, boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;*, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 7 of 149</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x562847A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::addChildCategories(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>714</line>
    </frame>
    <frame>
      <ip>0x20BFFF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>592</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 8 of 149</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5ACC6B9</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::unique_ptr&lt;std::thread::_State, std::default_delete&lt;std::thread::_State&gt; &gt; std::thread::_S_make_state&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt; &gt;(std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>197</line>
    </frame>
    <frame>
      <ip>0x5AC6C01</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::thread::thread&lt;void (&amp;)()&gt;(void (&amp;)())</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>126</line>
    </frame>
    <frame>
      <ip>0x5AB53E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::start()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x2093B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>311</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x8</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 9 of 149</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE320D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, false&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADF1A6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, false&gt; &gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, false&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5ADA63E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__detail::_Hash_node&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, false&gt; &gt; &gt;::_M_allocate_node&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable_policy.h</file>
      <line>2060</line>
    </frame>
    <frame>
      <ip>0x5AD4DC9</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, true, false&gt;, bool&gt; std::_Hashtable&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Identity, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_emplace&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;(std::integral_constant&lt;bool, true&gt;, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1644</line>
    </frame>
    <frame>
      <ip>0x5ACEEA6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, true, false&gt;, bool&gt; std::_Hashtable&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Identity, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::emplace&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>736</line>
    </frame>
    <frame>
      <ip>0x5AC9819</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, true, false&gt;, bool&gt; std::unordered_set&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt; &gt;::emplace&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>unordered_set.h</file>
      <line>376</line>
    </frame>
    <frame>
      <ip>0x5AC5246</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>550</line>
    </frame>
    <frame>
      <ip>0x5AC1F93</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>817</line>
    </frame>
    <frame>
      <ip>0x5AC70C5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>444</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5AB53B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>startService()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>96</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x9</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 10 of 149</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x219366</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::resolver_service_base(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>40</line>
    </frame>
    <frame>
      <ip>0x24FF12</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service&lt;boost::asio::ip::tcp&gt;::resolver_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>resolver_service.hpp</file>
      <line>54</line>
    </frame>
    <frame>
      <ip>0x24F9DE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;::resolver_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>resolver_service.hpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x24F1E4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x24E837</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x24D404</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x24A46A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_io_object&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;, false&gt;::basic_io_object(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_io_object.hpp</file>
      <line>91</line>
    </frame>
    <frame>
      <ip>0x247460</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_resolver(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>68</line>
    </frame>
    <frame>
      <ip>0x24221F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::construct&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, boost::asio::io_service&amp;&gt;(boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;*, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x23EDD7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt; &gt;::construct&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, boost::asio::io_service&amp;&gt;(std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;&amp;, boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;*, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xa</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 11 of 149</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x2197AC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::start_work_thread()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>122</line>
    </frame>
    <frame>
      <ip>0x2196FB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::start_resolve_op(boost::asio::detail::task_io_service_operation*)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x2306FE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost::asio::detail::resolver_service&lt;boost::asio::ip::tcp&gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(std::shared_ptr&lt;void&gt;&amp;, boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>resolver_service.hpp</file>
      <line>86</line>
    </frame>
    <frame>
      <ip>0x22AB0C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(std::shared_ptr&lt;void&gt;&amp;, boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::handler_type&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>resolver_service.hpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x2244EC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::handler_type&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>167</line>
    </frame>
    <frame>
      <ip>0x21F714</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void SimpleWeb::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt; const&amp;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>asio_compatibility.hpp</file>
      <line>77</line>
    </frame>
    <frame>
      <ip>0x21B76A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>831</line>
    </frame>
    <frame>
      <ip>0x22D0B3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>284</line>
    </frame>
    <frame>
      <ip>0x226146</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>437</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
    <frame>
      <ip>0x21FFC1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xb</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 12 of 149</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x21DA48</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::posix_thread::posix_thread&lt;boost::asio::detail::resolver_service_base::work_io_service_runner&gt;(boost::asio::detail::resolver_service_base::work_io_service_runner, unsigned int)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>posix_thread.hpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x2197C3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::start_work_thread()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>122</line>
    </frame>
    <frame>
      <ip>0x2196FB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::start_resolve_op(boost::asio::detail::task_io_service_operation*)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x2306FE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost::asio::detail::resolver_service&lt;boost::asio::ip::tcp&gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(std::shared_ptr&lt;void&gt;&amp;, boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>resolver_service.hpp</file>
      <line>86</line>
    </frame>
    <frame>
      <ip>0x22AB0C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(std::shared_ptr&lt;void&gt;&amp;, boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::handler_type&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>resolver_service.hpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x2244EC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::handler_type&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>167</line>
    </frame>
    <frame>
      <ip>0x21F714</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void SimpleWeb::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt; const&amp;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>asio_compatibility.hpp</file>
      <line>77</line>
    </frame>
    <frame>
      <ip>0x21B76A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>831</line>
    </frame>
    <frame>
      <ip>0x22D0B3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>284</line>
    </frame>
    <frame>
      <ip>0x226146</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>437</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xc</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 13 of 149</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5B165B7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::loadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>359</line>
    </frame>
    <frame>
      <ip>0x20BBE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>562</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xd</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 14 of 149</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x55F7683</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;ConfigCategory::CategoryItem*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x55F72C1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::allocate(std::allocator&lt;ConfigCategory::CategoryItem*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x55F6C25</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Vector_base&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x55F5889</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::_M_realloc_insert&lt;ConfigCategory::CategoryItem*&gt;(__gnu_cxx::__normal_iterator&lt;ConfigCategory::CategoryItem**, std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt; &gt;, ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
    <frame>
      <ip>0x55F462D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::emplace_back&lt;ConfigCategory::CategoryItem*&gt;(ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>105</line>
    </frame>
    <frame>
      <ip>0x55F3301</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::push_back(ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>954</line>
    </frame>
    <frame>
      <ip>0x55E92E5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::addItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>267</line>
    </frame>
    <frame>
      <ip>0x20F3B0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::addConfigDefaults(DefaultConfigCategory&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>831</line>
    </frame>
    <frame>
      <ip>0x20BEF5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>583</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xe</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>18 bytes in 1 blocks are still reachable in loss record 15 of 149</text>
    <leakedbytes>18</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20336C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x55E8529</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::ConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>137</line>
    </frame>
    <frame>
      <ip>0x55EF014</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>DefaultConfigCategory::DefaultConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1497</line>
    </frame>
    <frame>
      <ip>0x20BEBE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>582</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0xf</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>18 bytes in 1 blocks are still reachable in loss record 16 of 149</text>
    <leakedbytes>18</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20336C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x201B29</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x20066B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x200777</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>415</line>
    </frame>
    <frame>
      <ip>0x1FF71B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>948</line>
    </frame>
    <frame>
      <ip>0x20BFD1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>591</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x10</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>21 bytes in 1 blocks are still reachable in loss record 17 of 149</text>
    <leakedbytes>21</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC72AC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x5AC6588</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable::regex_orderable(char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>374</line>
    </frame>
    <frame>
      <ip>0x5AB4E92</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x11</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>21 bytes in 1 blocks are still reachable in loss record 18 of 149</text>
    <leakedbytes>21</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC72AC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x5AC6588</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable::regex_orderable(char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>374</line>
    </frame>
    <frame>
      <ip>0x5AB508A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x12</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>21 bytes in 1 blocks are still reachable in loss record 19 of 149</text>
    <leakedbytes>21</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC72AC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x5AC6588</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable::regex_orderable(char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>374</line>
    </frame>
    <frame>
      <ip>0x5AB5132</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>83</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x13</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>23 bytes in 1 blocks are still reachable in loss record 20 of 149</text>
    <leakedbytes>23</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20336C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x201B29</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x20066B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x1FF6E3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>943</line>
    </frame>
    <frame>
      <ip>0x55EDE3A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(ConfigCategory::CategoryItem const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1300</line>
    </frame>
    <frame>
      <ip>0x55E8ECD</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::operator=(ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x20BDBA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>572</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x14</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 21 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AD9FA1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections*&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>584</line>
    </frame>
    <frame>
      <ip>0x5AD49A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections*&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections*, std::integral_constant&lt;bool, false&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x5ACEA15</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections, void&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1079</line>
    </frame>
    <frame>
      <ip>0x5AC94E2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections&gt;::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections, void&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connections*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>129</line>
    </frame>
    <frame>
      <ip>0x5AC4D7C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::ServerBase(unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>531</line>
    </frame>
    <frame>
      <ip>0x5AC1B64</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Server()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>813</line>
    </frame>
    <frame>
      <ip>0x5AB4DFB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x15</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 22 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x23443F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ScopeRunner*&gt;(SimpleWeb::ScopeRunner*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>584</line>
    </frame>
    <frame>
      <ip>0x22E1C2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ScopeRunner*&gt;(SimpleWeb::ScopeRunner*, std::integral_constant&lt;bool, false&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x22793D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ScopeRunner, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;SimpleWeb::ScopeRunner, void&gt;(SimpleWeb::ScopeRunner*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1079</line>
    </frame>
    <frame>
      <ip>0x22231A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;::shared_ptr&lt;SimpleWeb::ScopeRunner, void&gt;(SimpleWeb::ScopeRunner*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>129</line>
    </frame>
    <frame>
      <ip>0x5AC4DA7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::ServerBase(unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>531</line>
    </frame>
    <frame>
      <ip>0x5AC1B64</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Server()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>813</line>
    </frame>
    <frame>
      <ip>0x5AB4DFB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x16</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 23 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x241445</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x23D7F2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node_base*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AEAB78</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, false&gt; &gt; &gt;::_M_allocate_buckets(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable_policy.h</file>
      <line>2107</line>
    </frame>
    <frame>
      <ip>0x5AE6F9E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Hashtable&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Identity, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>354</line>
    </frame>
    <frame>
      <ip>0x5AE3278</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Hashtable&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Identity, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux(unsigned long, std::integral_constant&lt;bool, true&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>2092</line>
    </frame>
    <frame>
      <ip>0x5ADF28D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Hashtable&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Identity, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash(unsigned long, unsigned long const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>2071</line>
    </frame>
    <frame>
      <ip>0x5ADA893</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Hashtable&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Identity, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, false&gt;*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1718</line>
    </frame>
    <frame>
      <ip>0x5AD4EA7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, true, false&gt;, bool&gt; std::_Hashtable&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Identity, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_emplace&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;(std::integral_constant&lt;bool, true&gt;, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1666</line>
    </frame>
    <frame>
      <ip>0x5ACEEA6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, true, false&gt;, bool&gt; std::_Hashtable&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Identity, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::emplace&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>736</line>
    </frame>
    <frame>
      <ip>0x5AC9819</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, true, false&gt;, bool&gt; std::unordered_set&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::hash&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::equal_to&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;, std::allocator&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt; &gt;::emplace&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>unordered_set.h</file>
      <line>376</line>
    </frame>
    <frame>
      <ip>0x5AC5246</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>550</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x17</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 24 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x23443F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ScopeRunner*&gt;(SimpleWeb::ScopeRunner*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>584</line>
    </frame>
    <frame>
      <ip>0x22E1C2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ScopeRunner*&gt;(SimpleWeb::ScopeRunner*, std::integral_constant&lt;bool, false&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x22793D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ScopeRunner, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;SimpleWeb::ScopeRunner, void&gt;(SimpleWeb::ScopeRunner*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1079</line>
    </frame>
    <frame>
      <ip>0x22231A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;::shared_ptr&lt;SimpleWeb::ScopeRunner, void&gt;(SimpleWeb::ScopeRunner*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>129</line>
    </frame>
    <frame>
      <ip>0x21E96C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::ClientBase(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x21AF67</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Client(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>820</line>
    </frame>
    <frame>
      <ip>0x5620E76</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::getHttpClient()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x21FE89</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x20967E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>332</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x18</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 25 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x231FAD</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::unique_ptr&lt;std::thread::_State, std::default_delete&lt;std::unique_ptr&gt; &gt; std::thread::_S_make_state&lt;std::thread::_Invoker&lt;std::tuple&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)::{lambda()#1}&gt; &gt; &gt;(boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>197</line>
    </frame>
    <frame>
      <ip>0x22C11B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::thread::thread&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)::{lambda()#1}&gt;(boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>126</line>
    </frame>
    <frame>
      <ip>0x22603C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>425</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
    <frame>
      <ip>0x21FFC1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x20967E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>332</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x19</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 26 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x243A82</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, false&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x23FE58</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, false&gt; &gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, false&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x23BB80</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Hash_node&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable_policy.h</file>
      <line>2060</line>
    </frame>
    <frame>
      <ip>0x236A11</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, true, false&gt;, bool&gt; std::_Hashtable&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_emplace&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&gt;(std::integral_constant&lt;bool, true&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1644</line>
    </frame>
    <frame>
      <ip>0x22FF34</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, true, false&gt;, bool&gt; std::_Hashtable&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::emplace&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>736</line>
    </frame>
    <frame>
      <ip>0x22A207</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, true, false&gt;, bool&gt; std::unordered_set&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt; &gt;::emplace&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>unordered_set.h</file>
      <line>376</line>
    </frame>
    <frame>
      <ip>0x232854</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::get_connection()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>485</line>
    </frame>
    <frame>
      <ip>0x22CD3B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>238</line>
    </frame>
    <frame>
      <ip>0x226146</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>437</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
    <frame>
      <ip>0x21FFC1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 27 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x241445</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x23D7F2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node_base*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x24BC2C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, false&gt; &gt; &gt;::_M_allocate_buckets(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable_policy.h</file>
      <line>2107</line>
    </frame>
    <frame>
      <ip>0x248746</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Hashtable&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_allocate_buckets(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>354</line>
    </frame>
    <frame>
      <ip>0x243B58</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Hashtable&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash_aux(unsigned long, std::integral_constant&lt;bool, true&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>2092</line>
    </frame>
    <frame>
      <ip>0x23FF23</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Hashtable&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash(unsigned long, unsigned long const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>2071</line>
    </frame>
    <frame>
      <ip>0x23BDD3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Hashtable&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, false&gt;*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1718</line>
    </frame>
    <frame>
      <ip>0x236AEF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, true, false&gt;, bool&gt; std::_Hashtable&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_emplace&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&gt;(std::integral_constant&lt;bool, true&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1666</line>
    </frame>
    <frame>
      <ip>0x22FF34</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, true, false&gt;, bool&gt; std::_Hashtable&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::emplace&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>736</line>
    </frame>
    <frame>
      <ip>0x22A207</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::pair&lt;std::__detail::_Node_iterator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, true, false&gt;, bool&gt; std::unordered_set&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::hash&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::equal_to&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt; &gt;::emplace&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>unordered_set.h</file>
      <line>376</line>
    </frame>
    <frame>
      <ip>0x232854</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::get_connection()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>485</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 28 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x23FD9B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared*&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>584</line>
    </frame>
    <frame>
      <ip>0x23B9AA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared*&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared*, std::integral_constant&lt;bool, false&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x23692D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared, void&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1079</line>
    </frame>
    <frame>
      <ip>0x22FD84</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared&gt;::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared, void&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Shared*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>129</line>
    </frame>
    <frame>
      <ip>0x22A0C4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Response(unsigned long, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>113</line>
    </frame>
    <frame>
      <ip>0x24F116</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session::Session(unsigned long, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>201</line>
    </frame>
    <frame>
      <ip>0x24E697</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x24D261</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; &gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;&amp;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x24A120</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x246FDA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x241A4B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 29 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x23BA31</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response*&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>584</line>
    </frame>
    <frame>
      <ip>0x23697E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response*&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response*, std::integral_constant&lt;bool, false&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>595</line>
    </frame>
    <frame>
      <ip>0x22FE3F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response, void&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1079</line>
    </frame>
    <frame>
      <ip>0x22A192</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response, void&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>129</line>
    </frame>
    <frame>
      <ip>0x24F121</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session::Session(unsigned long, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>201</line>
    </frame>
    <frame>
      <ip>0x24E697</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x24D261</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; &gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;&amp;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x24A120</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x246FDA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x241A4B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x23DEF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;::shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 30 of 149</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5B266E2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_List_node&lt;void*&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5B25C63</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_List_node&lt;void*&gt; &gt; &gt;::allocate(std::allocator&lt;std::_List_node&lt;void*&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5B243F2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__cxx11::_List_base&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_list.h</file>
      <line>383</line>
    </frame>
    <frame>
      <ip>0x5B21953</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_List_node&lt;void*&gt;* std::__cxx11::list&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_create_node&lt;void*&gt;(void*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_list.h</file>
      <line>572</line>
    </frame>
    <frame>
      <ip>0x5B1F2B7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void std::__cxx11::list&lt;void*, std::allocator&lt;void*&gt; &gt;::_M_insert&lt;void*&gt;(std::_List_iterator&lt;void*&gt;, void*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_list.h</file>
      <line>1801</line>
    </frame>
    <frame>
      <ip>0x5B1D354</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__cxx11::list&lt;void*, std::allocator&lt;void*&gt; &gt;::push_back(void*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_list.h</file>
      <line>1123</line>
    </frame>
    <frame>
      <ip>0x5B16989</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::loadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>391</line>
    </frame>
    <frame>
      <ip>0x20BBE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>562</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>25 bytes in 1 blocks are still reachable in loss record 31 of 149</text>
    <leakedbytes>25</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC72AC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x5AC6588</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable::regex_orderable(char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>374</line>
    </frame>
    <frame>
      <ip>0x5AB4F3A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>26 bytes in 1 blocks are still reachable in loss record 32 of 149</text>
    <leakedbytes>26</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC72AC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x5EC7479</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr(unsigned long, unsigned long) const</fn>
    </frame>
    <frame>
      <ip>0x21A2A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ResponseMessage::parse(std::istream&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>utility.hpp</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x222FCA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}::operator()(boost::system::error_code const&amp;, unsigned long) const</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>570</line>
    </frame>
    <frame>
      <ip>0x22FBA4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;::operator()(boost::system::error_code const&amp;, unsigned long, int)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>read_until.hpp</file>
      <line>1053</line>
    </frame>
    <frame>
      <ip>0x24FD73</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;::operator()()</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>bind_handler.hpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x24F70D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;&amp;, ...)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>handler_invoke_hook.hpp</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x24ECFF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;, {lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;&amp;, {lambda(boost::system::error_code const&amp;, unsigned long)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>handler_invoke_helpers.hpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x24DE0F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;, boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, {lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, {lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;*)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>read_until.hpp</file>
      <line>1103</line>
    </frame>
    <frame>
      <ip>0x24BBD7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;&amp;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>handler_invoke_helpers.hpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x248628</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_recv_op&lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt; &gt;::do_complete(boost::asio::detail::task_io_service*, boost::asio::detail::task_io_service_operation*, boost::system::error_code const&amp;, unsigned long)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>reactive_socket_recv_op.hpp</file>
      <line>110</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x20</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are still reachable in loss record 33 of 149</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x9409E39</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/plugins/north/OMF/libOMF.so.1</obj>
      <fn>plugin_init</fn>
    </frame>
    <frame>
      <ip>0x252A19</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthPlugin::NorthPlugin(void*, ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north_plugin.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x20BDF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x21</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are still reachable in loss record 34 of 149</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x9409E97</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/plugins/north/OMF/libOMF.so.1</obj>
      <fn>plugin_init</fn>
    </frame>
    <frame>
      <ip>0x252A19</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthPlugin::NorthPlugin(void*, ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north_plugin.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x20BDF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x22</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are still reachable in loss record 35 of 149</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4B8A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC594A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x220590</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.h</file>
      <line>5961</line>
    </frame>
    <frame>
      <ip>0x20BE54</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>581</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x23</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are still reachable in loss record 36 of 149</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5EC4E18</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x55ED8FE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1268</line>
    </frame>
    <frame>
      <ip>0x55E93F9</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::addItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>277</line>
    </frame>
    <frame>
      <ip>0x20F18E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::addConfigDefaults(DefaultConfigCategory&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>826</line>
    </frame>
    <frame>
      <ip>0x20BEF5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>583</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x24</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are still reachable in loss record 37 of 149</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5EC4E18</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x55E9514</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::setItemDisplayName(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>293</line>
    </frame>
    <frame>
      <ip>0x20F28D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::addConfigDefaults(DefaultConfigCategory&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>828</line>
    </frame>
    <frame>
      <ip>0x20BEF5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>583</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x25</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 38 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20906F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::NorthService(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>287</line>
    </frame>
    <frame>
      <ip>0x208982</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>183</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x26</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 39 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x24CEAF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x249C62</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x246A37</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>allocated_ptr.h</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x2414E4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, boost::asio::io_service*, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>635</line>
    </frame>
    <frame>
      <ip>0x23D8C7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;boost::asio::io_service, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x238727</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt;::shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x231D5B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::allocate_shared&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x22BF53</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::make_shared&lt;boost::asio::io_service&gt;()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x5AC6E43</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>412</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5AB53B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>startService()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>96</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 40 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AC6EBE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>417</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5AB53B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>startService()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>96</line>
    </frame>
    <frame>
      <ip>0x5ACC67C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void std::__invoke_impl&lt;void, void (*)()&gt;(std::__invoke_other, void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x5AC6B7A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__invoke_result&lt;void (*)()&gt;::type std::__invoke&lt;void (*)()&gt;(void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x5B12F5F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>decltype (__invoke((_S_declval&lt;0ul&gt;)())) std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt;::_M_invoke&lt;0ul&gt;(std::_Index_tuple&lt;0ul&gt;)</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>234</line>
    </frame>
    <frame>
      <ip>0x5B127D5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt;::operator()()</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>243</line>
    </frame>
    <frame>
      <ip>0x5B11DDF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt; &gt;::_M_run()</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>186</line>
    </frame>
    <frame>
      <ip>0x5E5D6DE</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
    </frame>
    <frame>
      <ip>0x504A6DA</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.27.so</obj>
      <fn>start_thread</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/nptl</dir>
      <file>pthread_create.c</file>
      <line>463</line>
    </frame>
    <frame>
      <ip>0x646261E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>clone</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64</dir>
      <file>clone.S</file>
      <line>95</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x28</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 41 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AC9558</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection::Connection&lt;boost::asio::io_service&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;, boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>290</line>
    </frame>
    <frame>
      <ip>0x5AC51CE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>539</line>
    </frame>
    <frame>
      <ip>0x5AC1F93</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>817</line>
    </frame>
    <frame>
      <ip>0x5AC70C5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>444</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5AB53B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>startService()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>96</line>
    </frame>
    <frame>
      <ip>0x5ACC67C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void std::__invoke_impl&lt;void, void (*)()&gt;(std::__invoke_other, void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x5AC6B7A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__invoke_result&lt;void (*)()&gt;::type std::__invoke&lt;void (*)()&gt;(void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x5B12F5F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>decltype (__invoke((_S_declval&lt;0ul&gt;)())) std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt;::_M_invoke&lt;0ul&gt;(std::_Index_tuple&lt;0ul&gt;)</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>234</line>
    </frame>
    <frame>
      <ip>0x5B127D5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt;::operator()()</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>243</line>
    </frame>
    <frame>
      <ip>0x5B11DDF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt; &gt;::_M_run()</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>186</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x29</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 42 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x24CEAF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x249C62</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x246A37</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>allocated_ptr.h</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x2414E4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, boost::asio::io_service*, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>635</line>
    </frame>
    <frame>
      <ip>0x23D8C7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;boost::asio::io_service, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x238727</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt;::shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x231D5B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::allocate_shared&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x22BF53</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::make_shared&lt;boost::asio::io_service&gt;()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x225FC8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>422</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
    <frame>
      <ip>0x21FFC1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 43 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x2473D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection::Connection&lt;boost::asio::io_service&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;, boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>156</line>
    </frame>
    <frame>
      <ip>0x2420CC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x23EC2F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x23A3E2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x234652</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::_Sp_make_shared_tag, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x22E353</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x227A86</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;::shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x222637</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; std::allocate_shared&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x21EB7D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; std::make_shared&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x21B001</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>824</line>
    </frame>
    <frame>
      <ip>0x232812</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::get_connection()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>484</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 44 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C33B25</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x52637F4</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>_dlerror_run</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlerror.c</file>
      <line>140</line>
    </frame>
    <frame>
      <ip>0x5263050</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x5B18984</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>BinaryPluginHandle::BinaryPluginHandle(char const*, char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/include</dir>
      <file>binary_plugin_handle.h</file>
      <line>34</line>
    </frame>
    <frame>
      <ip>0x5B165CF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::loadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>359</line>
    </frame>
    <frame>
      <ip>0x20BBE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>562</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 45 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20452D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x20351D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x201D11</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x561F9ED</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char const*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
    <frame>
      <ip>0x561F92F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&gt;(char const*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>105</line>
    </frame>
    <frame>
      <ip>0x561F4B2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>JSONStringToVectorString(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>json_utils.cpp</file>
      <line>64</line>
    </frame>
    <frame>
      <ip>0x9409FC4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/plugins/north/OMF/libOMF.so.1</obj>
      <fn>plugin_init</fn>
    </frame>
    <frame>
      <ip>0x252A19</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthPlugin::NorthPlugin(void*, ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north_plugin.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x20BDF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 46 of 149</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20452D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x20351D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x201D11</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x200737</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
    <frame>
      <ip>0x1FF71B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>948</line>
    </frame>
    <frame>
      <ip>0x20BFD1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>591</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are still reachable in loss record 47 of 149</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4B8A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC594A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x2088CD</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>169</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are still reachable in loss record 48 of 149</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20336C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x209038</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::NorthService(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>284</line>
    </frame>
    <frame>
      <ip>0x208982</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>183</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x30</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are still reachable in loss record 49 of 149</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20336C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x5677D5A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ServiceRecord::ServiceRecord(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short, unsigned short, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>service_record.cpp</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x2094BE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>326</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x31</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are still reachable in loss record 50 of 149</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4B8A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC559F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)</fn>
    </frame>
    <frame>
      <ip>0x940832D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/plugins/north/OMF/libOMF.so.1</obj>
      <fn>AuthBasicCredentialsGenerate(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;)</fn>
    </frame>
    <frame>
      <ip>0x940A855</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/plugins/north/OMF/libOMF.so.1</obj>
      <fn>plugin_init</fn>
    </frame>
    <frame>
      <ip>0x252A19</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthPlugin::NorthPlugin(void*, ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north_plugin.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x20BDF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x32</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are still reachable in loss record 51 of 149</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5EC4E18</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x55EB142</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::setDescription(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>851</line>
    </frame>
    <frame>
      <ip>0x20BF5E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>584</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x33</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are still reachable in loss record 52 of 149</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE6ED9</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_deleter&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5AE3080</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_deleter&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::_Sp_counted_deleter&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5ADEFB7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_deleter&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_deleter&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;(std::__allocated_ptr&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>allocated_ptr.h</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5ADA471</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, std::allocator&lt;void&gt; &gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, std::allocator&lt;void&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>615</line>
    </frame>
    <frame>
      <ip>0x5AD4CF3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1})</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>605</line>
    </frame>
    <frame>
      <ip>0x5ACEE0B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, void&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1})</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1088</line>
    </frame>
    <frame>
      <ip>0x5AC9788</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1}, void&gt;(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)::{lambda(SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*)#1})</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>147</line>
    </frame>
    <frame>
      <ip>0x5AC51E1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>539</line>
    </frame>
    <frame>
      <ip>0x5AC1F93</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>817</line>
    </frame>
    <frame>
      <ip>0x5AC70C5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>444</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x34</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are still reachable in loss record 53 of 149</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x21F972</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>rapidjson::GenericDocument&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;, rapidjson::CrtAllocator&gt;::GenericDocument(rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt;*, unsigned long, rapidjson::CrtAllocator*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/rapidjson/include/rapidjson</dir>
      <file>document.h</file>
      <line>2125</line>
    </frame>
    <frame>
      <ip>0x56282C8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::addChildCategories(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>706</line>
    </frame>
    <frame>
      <ip>0x20BFFF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>592</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x35</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>40 bytes in 5 blocks are still reachable in loss record 54 of 149</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>5</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AF8F3D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5AF4C31</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;unsigned long&gt; &gt;::allocate(std::allocator&lt;unsigned long&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AF1531</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Vector_base&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x5AEDBF3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_realloc_insert&lt;unsigned long const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt; &gt;, unsigned long const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
    <frame>
      <ip>0x5AE9563</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::push_back(unsigned long const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>948</line>
    </frame>
    <frame>
      <ip>0x5AE55F3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>regex_automaton.h</file>
      <line>279</line>
    </frame>
    <frame>
      <ip>0x5AE17CA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler(char const*, char const*, std::locale const&amp;, std::regex_constants::syntax_option_type)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>regex_compiler.tcc</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x5ADD06F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::enable_if&lt;std::__detail::__is_contiguous_normal_iter&lt;char const*&gt;::value, std::shared_ptr&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; const&gt; &gt;::type std::__detail::__compile_nfa&lt;char const*, std::__cxx11::regex_traits&lt;char&gt; &gt;(char const*, char const*, std::__cxx11::regex_traits&lt;char&gt;::locale_type const&amp;, std::regex_constants::syntax_option_type)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>regex_compiler.h</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x5AD744F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::locale, std::regex_constants::syntax_option_type)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>regex.h</file>
      <line>767</line>
    </frame>
    <frame>
      <ip>0x5AD18D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt;(char const*, char const*, std::regex_constants::syntax_option_type)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>regex.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5ACBF33</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex(char const*, std::regex_constants::syntax_option_type)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>regex.h</file>
      <line>445</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x36</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>42 bytes in 2 blocks are still reachable in loss record 55 of 149</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20336C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x201B29</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x20066B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x200777</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>415</line>
    </frame>
    <frame>
      <ip>0x1FF71B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>948</line>
    </frame>
    <frame>
      <ip>0x55EDE3A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(ConfigCategory::CategoryItem const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1300</line>
    </frame>
    <frame>
      <ip>0x55E8ECD</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::operator=(ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x20BDBA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>572</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x37</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 56 of 149</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1FCE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x5ADD60E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x5AD827B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x5AD2C4F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::basic_io_object&lt;boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt;, true&gt;::basic_io_object(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_io_object.hpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x5ACC8FA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_socket_acceptor(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_socket_acceptor.hpp</file>
      <line>84</line>
    </frame>
    <frame>
      <ip>0x5AC6ECC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>417</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5AB53B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>startService()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>96</line>
    </frame>
    <frame>
      <ip>0x5ACC67C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void std::__invoke_impl&lt;void, void (*)()&gt;(std::__invoke_other, void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x5AC6B7A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__invoke_result&lt;void (*)()&gt;::type std::__invoke&lt;void (*)()&gt;(void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>95</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x38</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 57 of 149</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AC51BD</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>539</line>
    </frame>
    <frame>
      <ip>0x5AC1F93</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>817</line>
    </frame>
    <frame>
      <ip>0x5AC70C5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>444</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5AB53B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>startService()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>96</line>
    </frame>
    <frame>
      <ip>0x5ACC67C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void std::__invoke_impl&lt;void, void (*)()&gt;(std::__invoke_other, void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x5AC6B7A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::__invoke_result&lt;void (*)()&gt;::type std::__invoke&lt;void (*)()&gt;(void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x5B12F5F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>decltype (__invoke((_S_declval&lt;0ul&gt;)())) std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt;::_M_invoke&lt;0ul&gt;(std::_Index_tuple&lt;0ul&gt;)</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>234</line>
    </frame>
    <frame>
      <ip>0x5B127D5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt;::operator()()</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>243</line>
    </frame>
    <frame>
      <ip>0x5B11DDF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void (*)()&gt; &gt; &gt;::_M_run()</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>186</line>
    </frame>
    <frame>
      <ip>0x5E5D6DE</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x39</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 58 of 149</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x244312</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x240A31</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x23C9B6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x237333</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_io_object&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;, true&gt;::basic_io_object(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_io_object.hpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x2307A4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_socket(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_socket.hpp</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x22AB84</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_stream_socket(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_stream_socket.hpp</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x5AC9566</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection::Connection&lt;boost::asio::io_service&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;, boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>290</line>
    </frame>
    <frame>
      <ip>0x5AC51CE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection&lt;boost::asio::io_service&amp;&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>539</line>
    </frame>
    <frame>
      <ip>0x5AC1F93</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>817</line>
    </frame>
    <frame>
      <ip>0x5AC70C5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>444</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 59 of 149</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5649054</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5646627</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x56424F6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;std::thread::id, std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt;, std::_Select1st&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt;, std::less&lt;std::thread::id&gt;, std::allocator&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x563E1D2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt;* std::_Rb_tree&lt;std::thread::id, std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt;, std::_Select1st&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt;, std::less&lt;std::thread::id&gt;, std::allocator&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::thread::id const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::thread::id const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5639EA0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt; std::_Rb_tree&lt;std::thread::id, std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt;, std::_Select1st&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt;, std::less&lt;std::thread::id&gt;, std::allocator&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::thread::id const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::thread::id const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5636E69</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::map&lt;std::thread::id, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*, std::less&lt;std::thread::id&gt;, std::allocator&lt;std::pair&lt;std::thread::id const, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;*&gt; &gt; &gt;::operator[](std::thread::id const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>493</line>
    </frame>
    <frame>
      <ip>0x5620EA0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::getHttpClient()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>83</line>
    </frame>
    <frame>
      <ip>0x21FE89</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x20967E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>332</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 60 of 149</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x244312</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x240A31</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x23C9B6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x237333</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_io_object&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;, true&gt;::basic_io_object(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_io_object.hpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x2307A4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_socket(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_socket.hpp</file>
      <line>71</line>
    </frame>
    <frame>
      <ip>0x22AB84</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_stream_socket(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_stream_socket.hpp</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x2473E4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection::Connection&lt;boost::asio::io_service&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;, boost::asio::io_service&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>156</line>
    </frame>
    <frame>
      <ip>0x2420CC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x23EC2F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; &gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x23A3E2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 61 of 149</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x23963C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x2336A1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x22D46C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Rb_tree&lt;void*, std::pair&lt;void* const, PLUGIN_TYPE&gt;, std::_Select1st&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x226486</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt;* std::_Rb_tree&lt;void*, std::pair&lt;void* const, PLUGIN_TYPE&gt;, std::_Select1st&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x220B66</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt; std::_Rb_tree&lt;void*, std::pair&lt;void* const, PLUGIN_TYPE&gt;, std::_Select1st&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x21C199</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::map&lt;void*, PLUGIN_TYPE, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PLUGIN_TYPE&gt; &gt; &gt;::operator[](void* const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>493</line>
    </frame>
    <frame>
      <ip>0x5B16A02</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::loadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>394</line>
    </frame>
    <frame>
      <ip>0x20BBE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>562</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 62 of 149</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5B26852</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5B25DC3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5B248C4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;void*, std::pair&lt;void* const, PLUGIN_INFORMATION*&gt;, std::_Select1st&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5B22078</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt;* std::_Rb_tree&lt;void*, std::pair&lt;void* const, PLUGIN_INFORMATION*&gt;, std::_Select1st&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5B1F5CE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt; std::_Rb_tree&lt;void*, std::pair&lt;void* const, PLUGIN_INFORMATION*&gt;, std::_Select1st&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5B1D569</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;void*, PLUGIN_INFORMATION*, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PLUGIN_INFORMATION*&gt; &gt; &gt;::operator[](void* const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>493</line>
    </frame>
    <frame>
      <ip>0x5B16A28</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::loadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>395</line>
    </frame>
    <frame>
      <ip>0x20BBE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>562</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 63 of 149</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5B26990</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5B25EC3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5B24CB4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;void*, std::pair&lt;void* const, PluginHandle*&gt;, std::_Select1st&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5B2263E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt;* std::_Rb_tree&lt;void*, std::pair&lt;void* const, PluginHandle*&gt;, std::_Select1st&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5B1F78C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt; std::_Rb_tree&lt;void*, std::pair&lt;void* const, PluginHandle*&gt;, std::_Select1st&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt;, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;void* const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5B1D687</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;void*, PluginHandle*, std::less&lt;void*&gt;, std::allocator&lt;std::pair&lt;void* const, PluginHandle*&gt; &gt; &gt;::operator[](void* const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>493</line>
    </frame>
    <frame>
      <ip>0x5B16A55</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::loadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>397</line>
    </frame>
    <frame>
      <ip>0x20BBE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>562</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>51 bytes in 1 blocks are still reachable in loss record 64 of 149</text>
    <leakedbytes>51</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC72AC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x561FC5B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void __gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, char const*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x561F96D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&gt;(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, char const*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x561FA2D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char const*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>415</line>
    </frame>
    <frame>
      <ip>0x561F92F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&gt;(char const*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>105</line>
    </frame>
    <frame>
      <ip>0x561F4B2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>JSONStringToVectorString(std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>json_utils.cpp</file>
      <line>64</line>
    </frame>
    <frame>
      <ip>0x9409FC4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/plugins/north/OMF/libOMF.so.1</obj>
      <fn>plugin_init</fn>
    </frame>
    <frame>
      <ip>0x252A19</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthPlugin::NorthPlugin(void*, ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north_plugin.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x20BDF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x40</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>56 bytes in 1 blocks are still reachable in loss record 65 of 149</text>
    <leakedbytes>56</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x241445</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x23D7F2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node_base*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x2385E6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_buckets(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable_policy.h</file>
      <line>2107</line>
    </frame>
    <frame>
      <ip>0x231C6C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_allocate_buckets(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>354</line>
    </frame>
    <frame>
      <ip>0x23E4D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_rehash_aux(unsigned long, std::integral_constant&lt;bool, false&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>2133</line>
    </frame>
    <frame>
      <ip>0x239A7F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_rehash(unsigned long, unsigned long const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>2071</line>
    </frame>
    <frame>
      <ip>0x233D48</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_insert_multi_node(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;*, unsigned long, std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1756</line>
    </frame>
    <frame>
      <ip>0x22DDFA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt; std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt;, std::integral_constant&lt;bool, false&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1696</line>
    </frame>
    <frame>
      <ip>0x227157</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt; std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::integral_constant&lt;bool, false&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>681</line>
    </frame>
    <frame>
      <ip>0x22170B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt; std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>736</line>
    </frame>
    <frame>
      <ip>0x21DE37</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt; std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>unordered_map.h</file>
      <line>1436</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x41</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>56 bytes in 2 blocks are still reachable in loss record 66 of 149</text>
    <leakedbytes>56</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C31B0F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4008A92</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>decompose_rpath</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-load.c</file>
      <line>618</line>
    </frame>
    <frame>
      <ip>0x400999E</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>cache_rpath</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-load.c</file>
      <line>670</line>
    </frame>
    <frame>
      <ip>0x400999E</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_map_object</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-load.c</file>
      <line>2298</line>
    </frame>
    <frame>
      <ip>0x400E4C1</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>openaux</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-deps.c</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x400E83A</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_map_object_deps</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-deps.c</file>
      <line>249</line>
    </frame>
    <frame>
      <ip>0x40150E8</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>dl_open_worker</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>278</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x4014969</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_open</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>605</line>
    </frame>
    <frame>
      <ip>0x5262F95</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen_doit</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>66</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x64A81FE</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_error</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>215</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x42</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>58 bytes in 1 blocks are still reachable in loss record 67 of 149</text>
    <leakedbytes>58</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5EC4E18</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x55ED60D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1253</line>
    </frame>
    <frame>
      <ip>0x55E92D2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::addItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>267</line>
    </frame>
    <frame>
      <ip>0x20F3B0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::addConfigDefaults(DefaultConfigCategory&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>831</line>
    </frame>
    <frame>
      <ip>0x20BEF5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>583</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x43</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are still reachable in loss record 68 of 149</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x216B30</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::io_service()</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.ipp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x24CF59</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;boost::asio::io_service&gt;::construct&lt;boost::asio::io_service&gt;(boost::asio::io_service*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x249D52</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;boost::asio::io_service&gt; &gt;::construct&lt;boost::asio::io_service&gt;(std::allocator&lt;boost::asio::io_service&gt;&amp;, boost::asio::io_service*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x246B99</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;&gt;(std::allocator&lt;boost::asio::io_service&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x24153A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, boost::asio::io_service*, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x23D8C7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;boost::asio::io_service, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x238727</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt;::shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x231D5B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::allocate_shared&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x22BF53</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::make_shared&lt;boost::asio::io_service&gt;()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x5AC6E43</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>412</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x44</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are still reachable in loss record 69 of 149</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x216B30</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::io_service()</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.ipp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x24CF59</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;boost::asio::io_service&gt;::construct&lt;boost::asio::io_service&gt;(boost::asio::io_service*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x249D52</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;boost::asio::io_service&gt; &gt;::construct&lt;boost::asio::io_service&gt;(std::allocator&lt;boost::asio::io_service&gt;&amp;, boost::asio::io_service*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x246B99</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;&gt;(std::allocator&lt;boost::asio::io_service&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x24153A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, boost::asio::io_service*, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x23D8C7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;boost::asio::io_service, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x238727</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt;::shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x231D5B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::allocate_shared&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x22BF53</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::make_shared&lt;boost::asio::io_service&gt;()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x225FC8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>422</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x45</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are still reachable in loss record 70 of 149</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x2328DD</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::get_connection()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>492</line>
    </frame>
    <frame>
      <ip>0x22CD3B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>238</line>
    </frame>
    <frame>
      <ip>0x226146</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>437</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
    <frame>
      <ip>0x21FFC1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x20967E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>332</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x46</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are still reachable in loss record 71 of 149</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x216B30</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::io_service()</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.ipp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x219371</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::resolver_service_base(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>40</line>
    </frame>
    <frame>
      <ip>0x24FF12</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service&lt;boost::asio::ip::tcp&gt;::resolver_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>resolver_service.hpp</file>
      <line>54</line>
    </frame>
    <frame>
      <ip>0x24F9DE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;::resolver_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>resolver_service.hpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x24F1E4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x24E837</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x24D404</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x24A46A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_io_object&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;, false&gt;::basic_io_object(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_io_object.hpp</file>
      <line>91</line>
    </frame>
    <frame>
      <ip>0x247460</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_resolver(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>68</line>
    </frame>
    <frame>
      <ip>0x24221F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::construct&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, boost::asio::io_service&amp;&gt;(boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;*, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x47</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>65 bytes in 3 blocks are still reachable in loss record 72 of 149</text>
    <leakedbytes>65</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC72AC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x55EBDAE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1031</line>
    </frame>
    <frame>
      <ip>0x55E87C6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::ConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x55EF014</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>DefaultConfigCategory::DefaultConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1497</line>
    </frame>
    <frame>
      <ip>0x20BC81</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x48</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>71 bytes in 1 blocks are still reachable in loss record 73 of 149</text>
    <leakedbytes>71</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4B8A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC6132</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5628105</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::addChildCategories(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>703</line>
    </frame>
    <frame>
      <ip>0x20BFFF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>592</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x49</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>72 bytes in 1 blocks are still reachable in loss record 74 of 149</text>
    <leakedbytes>72</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x241FD9</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x23EB18</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x23A255</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>allocated_ptr.h</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x2345D5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::_Sp_make_shared_tag, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection*, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>635</line>
    </frame>
    <frame>
      <ip>0x22E353</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x227A86</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;::shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x222637</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; std::allocate_shared&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x21EB7D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; std::make_shared&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection, std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;&gt;(std::shared_ptr&lt;SimpleWeb::ScopeRunner&gt;&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x21B001</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::create_connection()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>824</line>
    </frame>
    <frame>
      <ip>0x232812</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::get_connection()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>484</line>
    </frame>
    <frame>
      <ip>0x22CD3B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>238</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>72 bytes in 1 blocks are still reachable in loss record 75 of 149</text>
    <leakedbytes>72</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5B26599</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5B25B81</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5B23E80</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5B2132A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5B1F012</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5B1D237</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, void*, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, void*&gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>493</line>
    </frame>
    <frame>
      <ip>0x5B169A6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::loadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>392</line>
    </frame>
    <frame>
      <ip>0x20BBE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>562</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>72 bytes in 1 blocks are still reachable in loss record 76 of 149</text>
    <leakedbytes>72</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x23D1A4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt; &gt;(boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;, boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x2380E3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt; &gt;(boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;, boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;, std::__false_type)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.h</file>
      <line>236</line>
    </frame>
    <frame>
      <ip>0x2316E1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt; &gt;(boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;, boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.h</file>
      <line>255</line>
    </frame>
    <frame>
      <ip>0x22B9AF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;, void&gt;(boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;, boost::asio::buffers_iterator&lt;boost::asio::const_buffers_1, char&gt;, std::allocator&lt;char&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.h</file>
      <line>607</line>
    </frame>
    <frame>
      <ip>0x225403</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Content::string[abi:cxx11]()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x56282AA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::addChildCategories(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>705</line>
    </frame>
    <frame>
      <ip>0x20BFFF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>592</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>72 bytes in 3 blocks are still reachable in loss record 77 of 149</text>
    <leakedbytes>72</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC72AC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x5EC7479</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr(unsigned long, unsigned long) const</fn>
    </frame>
    <frame>
      <ip>0x21A061</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::HttpHeader::parse[abi:cxx11](std::istream&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>utility.hpp</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x21A2E3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ResponseMessage::parse(std::istream&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>utility.hpp</file>
      <line>322</line>
    </frame>
    <frame>
      <ip>0x222FCA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}::operator()(boost::system::error_code const&amp;, unsigned long) const</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>570</line>
    </frame>
    <frame>
      <ip>0x22FBA4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;::operator()(boost::system::error_code const&amp;, unsigned long, int)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>read_until.hpp</file>
      <line>1053</line>
    </frame>
    <frame>
      <ip>0x24FD73</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;::operator()()</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>bind_handler.hpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x24F70D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;&amp;, ...)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>handler_invoke_hook.hpp</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x24ECFF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;, {lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;&amp;, {lambda(boost::system::error_code const&amp;, unsigned long)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>handler_invoke_helpers.hpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x24DE0F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;, boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, {lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, {lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;*)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>read_until.hpp</file>
      <line>1103</line>
    </frame>
    <frame>
      <ip>0x24BBD7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;, boost::system::error_code, unsigned long&gt;&amp;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>handler_invoke_helpers.hpp</file>
      <line>37</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>73 bytes in 1 blocks are still reachable in loss record 78 of 149</text>
    <leakedbytes>73</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4B8A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC6132</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x55DA663</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, char const*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.h</file>
      <line>5991</line>
    </frame>
    <frame>
      <ip>0x5627F2A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::addChildCategories(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>692</line>
    </frame>
    <frame>
      <ip>0x20BFFF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>592</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>84 bytes in 1 blocks are still reachable in loss record 79 of 149</text>
    <leakedbytes>84</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C31B0F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x401D509</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>strdup</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/string</dir>
      <file>strdup.c</file>
      <line>42</line>
    </frame>
    <frame>
      <ip>0x4009118</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_map_object</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-load.c</file>
      <line>2393</line>
    </frame>
    <frame>
      <ip>0x4015083</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>dl_open_worker</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>235</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x4014969</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_open</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>605</line>
    </frame>
    <frame>
      <ip>0x5262F95</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen_doit</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>66</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x64A81FE</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_error</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>215</line>
    </frame>
    <frame>
      <ip>0x5263744</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>_dlerror_run</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlerror.c</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5263050</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x5B18984</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>BinaryPluginHandle::BinaryPluginHandle(char const*, char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/include</dir>
      <file>binary_plugin_handle.h</file>
      <line>34</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>84 bytes in 1 blocks are still reachable in loss record 80 of 149</text>
    <leakedbytes>84</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C31B0F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x400C597</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_new_object</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-object.c</file>
      <line>163</line>
    </frame>
    <frame>
      <ip>0x4006A04</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_map_object_from_fd</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-load.c</file>
      <line>998</line>
    </frame>
    <frame>
      <ip>0x40091AB</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_map_object</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-load.c</file>
      <line>2460</line>
    </frame>
    <frame>
      <ip>0x4015083</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>dl_open_worker</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>235</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x4014969</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_open</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>605</line>
    </frame>
    <frame>
      <ip>0x5262F95</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen_doit</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>66</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x64A81FE</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_error</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>215</line>
    </frame>
    <frame>
      <ip>0x5263744</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>_dlerror_run</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlerror.c</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5263050</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>87</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x50</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>88 bytes in 1 blocks are still reachable in loss record 81 of 149</text>
    <leakedbytes>88</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20BDD3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x51</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 1 blocks are still reachable in loss record 82 of 149</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AC4D50</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::ServerBase(unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>531</line>
    </frame>
    <frame>
      <ip>0x5AC1B64</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Server()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>813</line>
    </frame>
    <frame>
      <ip>0x5AB4DFB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 1 blocks are still reachable in loss record 83 of 149</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1C50</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD279</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD7B0A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD2158</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC3A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6A5A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB4EC2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x53</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 1 blocks are still reachable in loss record 84 of 149</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1C50</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD279</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD7B0A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD2158</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC3A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6A5A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB4F6A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x54</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 1 blocks are still reachable in loss record 85 of 149</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1C50</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD279</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD7B0A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD2158</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC3A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6A5A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB5012</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x55</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 1 blocks are still reachable in loss record 86 of 149</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1C50</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD279</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD7B0A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD2158</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC3A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6A5A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB50BA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x56</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 1 blocks are still reachable in loss record 87 of 149</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1C50</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD279</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD7B0A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD2158</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC3A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6A5A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB5162</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>83</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x57</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 1 blocks are still reachable in loss record 88 of 149</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x56491E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x56467B3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5642ADE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x563EAEE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;* std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x563A3AA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5637003</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>493</line>
    </frame>
    <frame>
      <ip>0x5B169D0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::loadPlugin(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>393</line>
    </frame>
    <frame>
      <ip>0x20BBE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>562</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x58</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>101 bytes in 1 blocks are still reachable in loss record 89 of 149</text>
    <leakedbytes>101</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C31B0F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4006416</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>open_path</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-load.c</file>
      <line>2106</line>
    </frame>
    <frame>
      <ip>0x4009338</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_map_object</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-load.c</file>
      <line>2291</line>
    </frame>
    <frame>
      <ip>0x400E4C1</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>openaux</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-deps.c</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x400E83A</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_map_object_deps</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-deps.c</file>
      <line>249</line>
    </frame>
    <frame>
      <ip>0x40150E8</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>dl_open_worker</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>278</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x4014969</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_open</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>605</line>
    </frame>
    <frame>
      <ip>0x5262F95</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen_doit</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>66</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x64A81FE</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_error</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>215</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x59</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>113 bytes in 1 blocks are still reachable in loss record 90 of 149</text>
    <leakedbytes>113</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x212ADC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::thread_info_base::allocate(boost::asio::detail::thread_info_base*, unsigned long)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>thread_info_base.hpp</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x212BED</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::asio_handler_allocate(unsigned long, ...)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>handler_alloc_hook.ipp</file>
      <line>50</line>
    </frame>
    <frame>
      <ip>0x5AD723C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void* boost_asio_handler_alloc_helpers::allocate&lt;SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()::{lambda(boost::system::error_code const&amp;)#1}&gt;(unsigned long, SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()::{lambda(boost::system::error_code const&amp;)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>handler_alloc_helpers.hpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x5AD16C3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::async_accept&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()::{lambda(boost::system::error_code const&amp;)#1}&gt;(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*, SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()::{lambda(boost::system::error_code const&amp;)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>reactive_socket_service.hpp</file>
      <line>409</line>
    </frame>
    <frame>
      <ip>0x5ACBD8D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()::{lambda(boost::system::error_code const&amp;)#1}, void (boost::system::error_code)&gt;::type&gt;::type boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt;::async_accept&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;, SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()::{lambda(boost::system::error_code const&amp;)#1}&gt;(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*, boost::asio::handler_type&amp;&amp;, std::enable_if&lt;std::is_convertible&lt;boost::asio::ip::tcp, boost::asio::basic_socket&gt;::value, void&gt;::type*)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>socket_acceptor_service.hpp</file>
      <line>287</line>
    </frame>
    <frame>
      <ip>0x5AC6507</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()::{lambda(boost::system::error_code const&amp;)#1}, void (boost::system::error_code)&gt;::type&gt;::type boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;::async_accept&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;, SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()::{lambda(boost::system::error_code const&amp;)#1}&gt;(boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;&amp;, boost::asio::handler_type&amp;&amp;, std::enable_if&lt;std::is_convertible&lt;boost::asio::ip::tcp, boost::asio::basic_socket&gt;::value, void&gt;::type*)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_socket_acceptor.hpp</file>
      <line>1018</line>
    </frame>
    <frame>
      <ip>0x5AC1FF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::Server&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::accept()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>819</line>
    </frame>
    <frame>
      <ip>0x5AC70C5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>444</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5AB53B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>startService()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>96</line>
    </frame>
    <frame>
      <ip>0x5ACC67C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>void std::__invoke_impl&lt;void, void (*)()&gt;(std::__invoke_other, void (*&amp;&amp;)())</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>invoke.h</file>
      <line>60</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>120 bytes in 1 blocks are still reachable in loss record 91 of 149</text>
    <leakedbytes>120</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x22A098</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response::Response(unsigned long, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>113</line>
    </frame>
    <frame>
      <ip>0x24F116</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session::Session(unsigned long, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>201</line>
    </frame>
    <frame>
      <ip>0x24E697</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x24D261</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; &gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;&amp;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x24A120</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x246FDA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x241A4B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x23DEF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;::shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x239047</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; std::allocate_shared&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x232FE9</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; std::make_shared&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x22CD63</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>238</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>120 bytes in 1 blocks are still reachable in loss record 92 of 149</text>
    <leakedbytes>120</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x24F1D2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x24E837</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x24D404</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x24A46A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_io_object&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;, false&gt;::basic_io_object(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_io_object.hpp</file>
      <line>91</line>
    </frame>
    <frame>
      <ip>0x247460</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_resolver(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>68</line>
    </frame>
    <frame>
      <ip>0x24221F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::construct&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, boost::asio::io_service&amp;&gt;(boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;*, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x23EDD7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt; &gt;::construct&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, boost::asio::io_service&amp;&gt;(std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;&amp;, boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;*, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x23A677</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;boost::asio::io_service&amp;&gt;(std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x234842</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;, boost::asio::io_service&amp;&gt;(std::_Sp_make_shared_tag, boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;*, std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt; const&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x22E40F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;, boost::asio::io_service&amp;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt; &gt; const&amp;, boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>128 bytes in 1 blocks are still reachable in loss record 93 of 149</text>
    <leakedbytes>128</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x93FD8D3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/plugins/north/OMF/libOMF.so.1</obj>
      <fn>void std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x940AA41</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/plugins/north/OMF/libOMF.so.1</obj>
      <fn>plugin_init</fn>
    </frame>
    <frame>
      <ip>0x252A19</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthPlugin::NorthPlugin(void*, ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north_plugin.cpp</file>
      <line>36</line>
    </frame>
    <frame>
      <ip>0x20BDF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>575</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>128 bytes in 1 blocks are still reachable in loss record 94 of 149</text>
    <leakedbytes>128</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20452D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x20351D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x201D11</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x200737</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
    <frame>
      <ip>0x1FF71B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>948</line>
    </frame>
    <frame>
      <ip>0x55ED9B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1275</line>
    </frame>
    <frame>
      <ip>0x55E93F9</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::addItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>277</line>
    </frame>
    <frame>
      <ip>0x20F18E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::addConfigDefaults(DefaultConfigCategory&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>826</line>
    </frame>
    <frame>
      <ip>0x20BEF5</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>583</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>132 bytes in 4 blocks are still reachable in loss record 95 of 149</text>
    <leakedbytes>132</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4B8A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC594A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x55ECDC6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1212</line>
    </frame>
    <frame>
      <ip>0x55E87C6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::ConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x55EF014</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>DefaultConfigCategory::DefaultConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1497</line>
    </frame>
    <frame>
      <ip>0x20BC81</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>136 bytes in 1 blocks are possibly lost in loss record 96 of 149</text>
    <leakedbytes>136</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C31B0F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x5E318FF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>__cxa_allocate_exception</fn>
    </frame>
    <frame>
      <ip>0x562846D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::addChildCategories(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>714</line>
    </frame>
    <frame>
      <ip>0x20BFFF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>592</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x60</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are still reachable in loss record 97 of 149</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1AA3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD13B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD759A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD1A32</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC12C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6846</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[](SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB4EB0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x61</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are still reachable in loss record 98 of 149</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1AA3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD13B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD759A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD1A32</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC12C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6846</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[](SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB4F58</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x62</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are still reachable in loss record 99 of 149</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1AA3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD13B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD759A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD1A32</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC12C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6846</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[](SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB5000</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x63</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are still reachable in loss record 100 of 149</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1AA3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD13B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD759A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD1A32</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC12C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6846</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[](SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB50A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x64</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are still reachable in loss record 101 of 149</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AE1AA3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x5ADD13B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x5AD759A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_get_node()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>588</line>
    </frame>
    <frame>
      <ip>0x5AD1A32</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_node&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;* std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>642</line>
    </frame>
    <frame>
      <ip>0x5ACC12C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::_Rb_tree_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; std::_Rb_tree&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;, std::tuple&lt;&gt; &gt;(std::_Rb_tree_const_iterator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;&gt;&amp;&amp;, std::tuple&lt;&gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_tree.h</file>
      <line>2398</line>
    </frame>
    <frame>
      <ip>0x5AC6846</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::map&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt;, std::less&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&gt;, std::allocator&lt;std::pair&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable const, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, std::shared_ptr&lt;SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Request&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;::operator[](SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::regex_orderable&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_map.h</file>
      <line>512</line>
    </frame>
    <frame>
      <ip>0x5AB5150</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>83</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x65</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>152 bytes in 1 blocks are still reachable in loss record 102 of 149</text>
    <leakedbytes>152</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x220FC6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor::descriptor_state* boost::asio::detail::object_pool_access::create&lt;boost::asio::detail::epoll_reactor::descriptor_state&gt;()</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>object_pool.hpp</file>
      <line>35</line>
    </frame>
    <frame>
      <ip>0x21CD2A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::object_pool&lt;boost::asio::detail::epoll_reactor::descriptor_state&gt;::alloc()</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>object_pool.hpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x2155CE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor::allocate_descriptor_state()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>epoll_reactor.ipp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x21485D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor::register_descriptor(int, boost::asio::detail::epoll_reactor::descriptor_state*&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>epoll_reactor.ipp</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x218AC3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_service_base::do_open(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, int, int, boost::system::error_code&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>reactive_socket_service_base.ipp</file>
      <line>161</line>
    </frame>
    <frame>
      <ip>0x236D41</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::open(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::ip::tcp const&amp;, boost::system::error_code&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>reactive_socket_service.hpp</file>
      <line>119</line>
    </frame>
    <frame>
      <ip>0x5AD2DA2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt;::open(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::ip::tcp const&amp;, boost::system::error_code&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>socket_acceptor_service.hpp</file>
      <line>148</line>
    </frame>
    <frame>
      <ip>0x5ACCA01</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;::open(boost::asio::ip::tcp const&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_socket_acceptor.hpp</file>
      <line>282</line>
    </frame>
    <frame>
      <ip>0x5AC6F49</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>419</line>
    </frame>
    <frame>
      <ip>0x5AB5450</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::startServer()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x5AB53B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>startService()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>96</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x66</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>152 bytes in 1 blocks are still reachable in loss record 103 of 149</text>
    <leakedbytes>152</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x220FC6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor::descriptor_state* boost::asio::detail::object_pool_access::create&lt;boost::asio::detail::epoll_reactor::descriptor_state&gt;()</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>object_pool.hpp</file>
      <line>35</line>
    </frame>
    <frame>
      <ip>0x21CD2A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::object_pool&lt;boost::asio::detail::epoll_reactor::descriptor_state&gt;::alloc()</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>object_pool.hpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x2155CE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor::allocate_descriptor_state()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>epoll_reactor.ipp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x21485D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor::register_descriptor(int, boost::asio::detail::epoll_reactor::descriptor_state*&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>epoll_reactor.ipp</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x218AC3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_service_base::do_open(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, int, int, boost::system::error_code&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>reactive_socket_service_base.ipp</file>
      <line>161</line>
    </frame>
    <frame>
      <ip>0x236D41</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::open(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::ip::tcp const&amp;, boost::system::error_code&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>reactive_socket_service.hpp</file>
      <line>119</line>
    </frame>
    <frame>
      <ip>0x230152</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;::open(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::ip::tcp const&amp;, boost::system::error_code&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>stream_socket_service.hpp</file>
      <line>150</line>
    </frame>
    <frame>
      <ip>0x22A663</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;boost::asio::detail::connect_op&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;, boost::asio::detail::default_connect_condition, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}::operator()(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;) const::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;, void (boost::system::error_code)&gt;::type&gt;::type boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;::async_connect&lt;boost::asio::detail::connect_op&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;, boost::asio::detail::default_connect_condition, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}::operator()(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;) const::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt; &gt;(boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::async_result&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_socket.hpp</file>
      <line>760</line>
    </frame>
    <frame>
      <ip>0x224141</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::connect_op&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;, boost::asio::detail::default_connect_condition, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}::operator()(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;) const::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;::operator()(boost::system::error_code, int)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>connect.hpp</file>
      <line>229</line>
    </frame>
    <frame>
      <ip>0x21F5B0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}::operator()(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;) const::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::async_connect&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}::operator()(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;) const::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;&amp;, boost::asio::handler_type, boost::asio::async_result&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>connect.hpp</file>
      <line>343</line>
    </frame>
    <frame>
      <ip>0x21B1CA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}::operator()(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;) const</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>838</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x67</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>176 bytes in 1 blocks are still reachable in loss record 104 of 149</text>
    <leakedbytes>176</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x226DB0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::detail::epoll_reactor&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x221089</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::detail::epoll_reactor&gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x21CFE2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor&amp; boost::asio::use_service&lt;boost::asio::detail::epoll_reactor&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x218701</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_service_base::reactive_socket_service_base(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>reactive_socket_service_base.ipp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x24C26C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::reactive_socket_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>reactive_socket_service.hpp</file>
      <line>77</line>
    </frame>
    <frame>
      <ip>0x5AE627E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt;::socket_acceptor_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>socket_acceptor_service.hpp</file>
      <line>94</line>
    </frame>
    <frame>
      <ip>0x5AE1FE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x5ADD60E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x5AD827B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::socket_acceptor_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x68</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>176 bytes in 1 blocks are still reachable in loss record 105 of 149</text>
    <leakedbytes>176</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x226DB0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::detail::epoll_reactor&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x221089</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::detail::epoll_reactor&gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x21CFE2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::epoll_reactor&amp; boost::asio::use_service&lt;boost::asio::detail::epoll_reactor&gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x218701</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_service_base::reactive_socket_service_base(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>reactive_socket_service_base.ipp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x24C26C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::reactive_socket_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>reactive_socket_service.hpp</file>
      <line>77</line>
    </frame>
    <frame>
      <ip>0x248CCC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;::stream_socket_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>stream_socket_service.hpp</file>
      <line>95</line>
    </frame>
    <frame>
      <ip>0x244324</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x240A31</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x23C9B6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x69</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>216 bytes in 1 blocks are still reachable in loss record 106 of 149</text>
    <leakedbytes>216</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x21D39F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::service_registry&lt;boost::asio::detail::task_io_service, unsigned long&gt;(boost::asio::io_service&amp;, boost::asio::detail::task_io_service*, unsigned long)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x216B4A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::io_service()</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.ipp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x24CF59</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;boost::asio::io_service&gt;::construct&lt;boost::asio::io_service&gt;(boost::asio::io_service*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x249D52</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;boost::asio::io_service&gt; &gt;::construct&lt;boost::asio::io_service&gt;(std::allocator&lt;boost::asio::io_service&gt;&amp;, boost::asio::io_service*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x246B99</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;&gt;(std::allocator&lt;boost::asio::io_service&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x24153A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, boost::asio::io_service*, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x23D8C7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;boost::asio::io_service, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x238727</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt;::shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x231D5B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::allocate_shared&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x22BF53</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::make_shared&lt;boost::asio::io_service&gt;()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x5AC6E43</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>SimpleWeb::ServerBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::start(std::function&lt;void (unsigned short)&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/../../thirdparty/Simple-Web-Server</dir>
      <file>server_http.hpp</file>
      <line>412</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>216 bytes in 1 blocks are still reachable in loss record 107 of 149</text>
    <leakedbytes>216</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x21D39F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::service_registry&lt;boost::asio::detail::task_io_service, unsigned long&gt;(boost::asio::io_service&amp;, boost::asio::detail::task_io_service*, unsigned long)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x216B4A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::io_service()</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.ipp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x24CF59</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;boost::asio::io_service&gt;::construct&lt;boost::asio::io_service&gt;(boost::asio::io_service*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x249D52</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;boost::asio::io_service&gt; &gt;::construct&lt;boost::asio::io_service&gt;(std::allocator&lt;boost::asio::io_service&gt;&amp;, boost::asio::io_service*)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x246B99</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;&gt;(std::allocator&lt;boost::asio::io_service&gt;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x24153A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, boost::asio::io_service*, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x23D8C7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;boost::asio::io_service, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x238727</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt;::shared_ptr&lt;std::allocator&lt;boost::asio::io_service&gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x231D5B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::allocate_shared&lt;boost::asio::io_service, std::allocator&lt;boost::asio::io_service&gt;&gt;(std::allocator&lt;boost::asio::io_service&gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x22BF53</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;boost::asio::io_service&gt; std::make_shared&lt;boost::asio::io_service&gt;()</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x225FC8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>422</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>216 bytes in 1 blocks are still reachable in loss record 108 of 149</text>
    <leakedbytes>216</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x21D39F</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::service_registry&lt;boost::asio::detail::task_io_service, unsigned long&gt;(boost::asio::io_service&amp;, boost::asio::detail::task_io_service*, unsigned long)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x216B4A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::io_service()</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.ipp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x219371</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::resolver_service_base(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>40</line>
    </frame>
    <frame>
      <ip>0x24FF12</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service&lt;boost::asio::ip::tcp&gt;::resolver_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>resolver_service.hpp</file>
      <line>54</line>
    </frame>
    <frame>
      <ip>0x24F9DE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;::resolver_service(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>resolver_service.hpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x24F1E4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::io_service::service* boost::asio::detail::service_registry::create&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x2136D6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::service_registry::do_use_service(boost::asio::io_service::service::key const&amp;, boost::asio::io_service::service* (*)(boost::asio::io_service&amp;))</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.ipp</file>
      <line>123</line>
    </frame>
    <frame>
      <ip>0x24E837</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>service_registry.hpp</file>
      <line>48</line>
    </frame>
    <frame>
      <ip>0x24D404</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;&amp; boost::asio::use_service&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>io_service.hpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x24A46A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::basic_io_object&lt;boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;, false&gt;::basic_io_object(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio</dir>
      <file>basic_io_object.hpp</file>
      <line>91</line>
    </frame>
    <frame>
      <ip>0x247460</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::basic_resolver(boost::asio::io_service&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>68</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>225 bytes in 1 blocks are still reachable in loss record 109 of 149</text>
    <leakedbytes>225</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x212ADC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::thread_info_base::allocate(boost::asio::detail::thread_info_base*, unsigned long)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>thread_info_base.hpp</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x212BED</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::asio_handler_allocate(unsigned long, ...)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>handler_alloc_hook.ipp</file>
      <line>50</line>
    </frame>
    <frame>
      <ip>0x2370D3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void* boost_asio_handler_alloc_helpers::allocate&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(unsigned long, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>handler_alloc_helpers.hpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x23067C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost::asio::detail::resolver_service&lt;boost::asio::ip::tcp&gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(std::shared_ptr&lt;void&gt;&amp;, boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>resolver_service.hpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x22AB0C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(std::shared_ptr&lt;void&gt;&amp;, boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::handler_type&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>resolver_service.hpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x2244EC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::handler_type&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>167</line>
    </frame>
    <frame>
      <ip>0x21F714</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void SimpleWeb::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt; const&amp;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>asio_compatibility.hpp</file>
      <line>77</line>
    </frame>
    <frame>
      <ip>0x21B76A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>831</line>
    </frame>
    <frame>
      <ip>0x22D0B3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>284</line>
    </frame>
    <frame>
      <ip>0x226146</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>437</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>256 bytes in 1 blocks are still reachable in loss record 110 of 149</text>
    <leakedbytes>256</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x55F7683</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;ConfigCategory::CategoryItem*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x55F72C1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::allocate(std::allocator&lt;ConfigCategory::CategoryItem*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x55F6C25</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Vector_base&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x55F5889</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::_M_realloc_insert&lt;ConfigCategory::CategoryItem*&gt;(__gnu_cxx::__normal_iterator&lt;ConfigCategory::CategoryItem**, std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt; &gt;, ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
    <frame>
      <ip>0x55F462D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::emplace_back&lt;ConfigCategory::CategoryItem*&gt;(ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>105</line>
    </frame>
    <frame>
      <ip>0x55F3301</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::push_back(ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>954</line>
    </frame>
    <frame>
      <ip>0x55E8EE0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::operator=(ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x2096C2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>334</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>256 bytes in 1 blocks are still reachable in loss record 111 of 149</text>
    <leakedbytes>256</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x55F7683</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>__gnu_cxx::new_allocator&lt;ConfigCategory::CategoryItem*&gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x55F72C1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::allocate(std::allocator&lt;ConfigCategory::CategoryItem*&gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x55F6C25</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::_Vector_base&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x55F5889</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::_M_realloc_insert&lt;ConfigCategory::CategoryItem*&gt;(__gnu_cxx::__normal_iterator&lt;ConfigCategory::CategoryItem**, std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt; &gt;, ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
    <frame>
      <ip>0x55F462D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::emplace_back&lt;ConfigCategory::CategoryItem*&gt;(ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>105</line>
    </frame>
    <frame>
      <ip>0x55F3301</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::vector&lt;ConfigCategory::CategoryItem*, std::allocator&lt;ConfigCategory::CategoryItem*&gt; &gt;::push_back(ConfigCategory::CategoryItem*&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>954</line>
    </frame>
    <frame>
      <ip>0x55E87DF</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::ConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x55EF014</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>DefaultConfigCategory::DefaultConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1497</line>
    </frame>
    <frame>
      <ip>0x20BC81</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>264 bytes in 3 blocks are still reachable in loss record 112 of 149</text>
    <leakedbytes>264</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C31B0F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x400BEC0</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>add_dependency</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-lookup.c</file>
      <line>711</line>
    </frame>
    <frame>
      <ip>0x400BEC0</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_lookup_symbol_x</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-lookup.c</file>
      <line>910</line>
    </frame>
    <frame>
      <ip>0x400CCA8</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>elf_machine_rela</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf/../sysdeps/x86_64</dir>
      <file>dl-machine.h</file>
      <line>308</line>
    </frame>
    <frame>
      <ip>0x400CCA8</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>elf_dynamic_do_Rela</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>do-rel.h</file>
      <line>137</line>
    </frame>
    <frame>
      <ip>0x400CCA8</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_relocate_object</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-reloc.c</file>
      <line>258</line>
    </frame>
    <frame>
      <ip>0x401525C</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>dl_open_worker</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>382</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x4014969</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_open</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-open.c</file>
      <line>605</line>
    </frame>
    <frame>
      <ip>0x5262F95</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen_doit</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>66</line>
    </frame>
    <frame>
      <ip>0x64A816E</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_exception</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x64A81FE</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.27.so</obj>
      <fn>_dl_catch_error</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf</dir>
      <file>dl-error-skeleton.c</file>
      <line>215</line>
    </frame>
    <frame>
      <ip>0x5263744</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>_dlerror_run</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlerror.c</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x5263050</ip>
      <obj>/lib/x86_64-linux-gnu/libdl-2.27.so</obj>
      <fn>dlopen@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/dlfcn</dir>
      <file>dlopen.c</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x5B18984</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>BinaryPluginHandle::BinaryPluginHandle(char const*, char const*)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common/include</dir>
      <file>binary_plugin_handle.h</file>
      <line>34</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x70</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>279 bytes in 9 blocks are still reachable in loss record 113 of 149</text>
    <leakedbytes>279</leakedbytes>
    <leakedblocks>9</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5EC4E18</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x55EB700</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>907</line>
    </frame>
    <frame>
      <ip>0x55E87C6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::ConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x55EF014</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>DefaultConfigCategory::DefaultConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1497</line>
    </frame>
    <frame>
      <ip>0x20BC81</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x71</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>279 bytes in 9 blocks are still reachable in loss record 114 of 149</text>
    <leakedbytes>279</leakedbytes>
    <leakedblocks>9</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5EC4E18</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x55EDC46</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(ConfigCategory::CategoryItem const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1284</line>
    </frame>
    <frame>
      <ip>0x55E8ECD</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::operator=(ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x20BDBA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>572</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x72</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>280 bytes in 1 blocks are still reachable in loss record 115 of 149</text>
    <leakedbytes>280</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5B139CB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>PluginManager::getInstance()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>plugin_manager.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x20B970</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>552</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x73</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>288 bytes in 4 blocks are still reachable in loss record 116 of 149</text>
    <leakedbytes>288</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x23E43B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x2399C7</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::allocate(std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x233B54</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable_policy.h</file>
      <line>2060</line>
    </frame>
    <frame>
      <ip>0x22DDA2</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt; std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt;, std::integral_constant&lt;bool, false&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>1682</line>
    </frame>
    <frame>
      <ip>0x227157</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt; std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::integral_constant&lt;bool, false&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>681</line>
    </frame>
    <frame>
      <ip>0x22170B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt; std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, SimpleWeb::CaseInsensitiveEqual, SimpleWeb::CaseInsensitiveHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>hashtable.h</file>
      <line>736</line>
    </frame>
    <frame>
      <ip>0x21DE37</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false, false&gt; std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>unordered_map.h</file>
      <line>1436</line>
    </frame>
    <frame>
      <ip>0x21A09A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::HttpHeader::parse[abi:cxx11](std::istream&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>utility.hpp</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x21A2E3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ResponseMessage::parse(std::istream&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>utility.hpp</file>
      <line>322</line>
    </frame>
    <frame>
      <ip>0x222FCA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}::operator()(boost::system::error_code const&amp;, unsigned long) const</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>570</line>
    </frame>
    <frame>
      <ip>0x22FBA4</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::read_until_match_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt;, std::allocator&lt;char&gt;, SimpleWeb::HeaderEndMatch, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::read(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, unsigned long)#1}&gt;::operator()(boost::system::error_code const&amp;, unsigned long, int)</fn>
      <dir>/usr/include/boost/asio/impl</dir>
      <file>read_until.hpp</file>
      <line>1053</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x74</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>296 bytes in 1 blocks are still reachable in loss record 117 of 149</text>
    <leakedbytes>296</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5620E68</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ManagementClient::getHttpClient()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>management_client.cpp</file>
      <line>82</line>
    </frame>
    <frame>
      <ip>0x21FE89</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x20967E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>332</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x75</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>316 bytes in 10 blocks are still reachable in loss record 118 of 149</text>
    <leakedbytes>316</leakedbytes>
    <leakedblocks>10</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4B8A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC594A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x55EBCBE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1017</line>
    </frame>
    <frame>
      <ip>0x55E87C6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::ConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x55EF014</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>DefaultConfigCategory::DefaultConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1497</line>
    </frame>
    <frame>
      <ip>0x20BC81</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x76</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>316 bytes in 10 blocks are still reachable in loss record 119 of 149</text>
    <leakedbytes>316</leakedbytes>
    <leakedblocks>10</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5EC4AC6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x5EC4E18</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x55EDC61</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(ConfigCategory::CategoryItem const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1285</line>
    </frame>
    <frame>
      <ip>0x55E8ECD</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::operator=(ConfigCategory const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x20BDBA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>572</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x77</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>336 bytes in 1 blocks are possibly lost in loss record 120 of 149</text>
    <leakedbytes>336</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C33B25</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x4013646</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>allocate_dtv</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>286</line>
    </frame>
    <frame>
      <ip>0x4013646</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>530</line>
    </frame>
    <frame>
      <ip>0x504B227</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.27.so</obj>
      <fn>allocate_stack</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/nptl</dir>
      <file>allocatestack.c</file>
      <line>627</line>
    </frame>
    <frame>
      <ip>0x504B227</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.27.so</obj>
      <fn>pthread_create@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/nptl</dir>
      <file>pthread_create.c</file>
      <line>644</line>
    </frame>
    <frame>
      <ip>0x5E5D994</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::thread::_M_start_thread(std::unique_ptr&lt;std::thread::_State, std::default_delete&lt;std::thread::_State&gt; &gt;, void (*)())</fn>
    </frame>
    <frame>
      <ip>0x5AC6C18</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>std::thread::thread&lt;void (&amp;)()&gt;(void (&amp;)())</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>126</line>
    </frame>
    <frame>
      <ip>0x5AB53E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::start()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x2093B1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>311</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x78</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>336 bytes in 1 blocks are possibly lost in loss record 121 of 149</text>
    <leakedbytes>336</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C33B25</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x4013646</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>allocate_dtv</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>286</line>
    </frame>
    <frame>
      <ip>0x4013646</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>530</line>
    </frame>
    <frame>
      <ip>0x504B227</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.27.so</obj>
      <fn>allocate_stack</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/nptl</dir>
      <file>allocatestack.c</file>
      <line>627</line>
    </frame>
    <frame>
      <ip>0x504B227</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.27.so</obj>
      <fn>pthread_create@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/nptl</dir>
      <file>pthread_create.c</file>
      <line>644</line>
    </frame>
    <frame>
      <ip>0x5E5D994</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::thread::_M_start_thread(std::unique_ptr&lt;std::thread::_State, std::default_delete&lt;std::thread::_State&gt; &gt;, void (*)())</fn>
    </frame>
    <frame>
      <ip>0x22C132</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::thread::thread&lt;std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)::{lambda()#1}&gt;(boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7</dir>
      <file>thread</file>
      <line>126</line>
    </frame>
    <frame>
      <ip>0x22603C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>425</line>
    </frame>
    <frame>
      <ip>0x2208FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>222</line>
    </frame>
    <frame>
      <ip>0x21FFC1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>bool ManagementClient::addCategory&lt;DefaultConfigCategory&gt;(DefaultConfigCategory const&amp;, bool)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../common/include</dir>
      <file>management_client.h</file>
      <line>151</line>
    </frame>
    <frame>
      <ip>0x20967E</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>332</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x79</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>336 bytes in 1 blocks are possibly lost in loss record 122 of 149</text>
    <leakedbytes>336</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C33B25</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x4013646</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>allocate_dtv</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>286</line>
    </frame>
    <frame>
      <ip>0x4013646</ip>
      <obj>/lib/x86_64-linux-gnu/ld-2.27.so</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>530</line>
    </frame>
    <frame>
      <ip>0x504B227</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.27.so</obj>
      <fn>allocate_stack</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/nptl</dir>
      <file>allocatestack.c</file>
      <line>627</line>
    </frame>
    <frame>
      <ip>0x504B227</ip>
      <obj>/lib/x86_64-linux-gnu/libpthread-2.27.so</obj>
      <fn>pthread_create@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-CVJwZb/glibc-2.27/nptl</dir>
      <file>pthread_create.c</file>
      <line>644</line>
    </frame>
    <frame>
      <ip>0x2191F1</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::posix_thread::start_thread(boost::asio::detail::posix_thread::func_base*)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>posix_thread.ipp</file>
      <line>50</line>
    </frame>
    <frame>
      <ip>0x21DA69</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::posix_thread::posix_thread&lt;boost::asio::detail::resolver_service_base::work_io_service_runner&gt;(boost::asio::detail::resolver_service_base::work_io_service_runner, unsigned int)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>posix_thread.hpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x2197C3</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::start_work_thread()</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>122</line>
    </frame>
    <frame>
      <ip>0x2196FB</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::detail::resolver_service_base::start_resolve_op(boost::asio::detail::task_io_service_operation*)</fn>
      <dir>/usr/include/boost/asio/detail/impl</dir>
      <file>resolver_service_base.ipp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x2306FE</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void boost::asio::detail::resolver_service&lt;boost::asio::ip::tcp&gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(std::shared_ptr&lt;void&gt;&amp;, boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;)</fn>
      <dir>/usr/include/boost/asio/detail</dir>
      <file>resolver_service.hpp</file>
      <line>86</line>
    </frame>
    <frame>
      <ip>0x22AB0C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(std::shared_ptr&lt;void&gt;&amp;, boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::handler_type&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>resolver_service.hpp</file>
      <line>127</line>
    </frame>
    <frame>
      <ip>0x2244EC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>boost::asio::async_result&lt;boost::asio::handler_type&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}, void (boost::system::error_code, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)&gt;::type&gt;::type boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::ip::basic_resolver_query&lt;boost::asio::ip::tcp&gt; const&amp;, boost::asio::handler_type&amp;&amp;)</fn>
      <dir>/usr/include/boost/asio/ip</dir>
      <file>basic_resolver.hpp</file>
      <line>167</line>
    </frame>
    <frame>
      <ip>0x21F714</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void SimpleWeb::async_resolve&lt;SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&gt;(boost::asio::ip::basic_resolver&lt;boost::asio::ip::tcp, boost::asio::ip::resolver_service&lt;boost::asio::ip::tcp&gt; &gt;&amp;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;char&gt; &gt; const&amp;, SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)::{lambda(boost::system::error_code const&amp;, boost::asio::ip::basic_resolver_iterator&lt;boost::asio::ip::tcp&gt;)#1}&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>asio_compatibility.hpp</file>
      <line>77</line>
    </frame>
    <frame>
      <ip>0x21B76A</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::Client&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::connect(std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>831</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>349 bytes in 2 blocks are still reachable in loss record 123 of 149</text>
    <leakedbytes>349</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20336C</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>basic_string.tcc</file>
      <line>219</line>
    </frame>
    <frame>
      <ip>0x561F6A8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>JSONunescape(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>json_utils.cpp</file>
      <line>99</line>
    </frame>
    <frame>
      <ip>0x55EC92D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1149</line>
    </frame>
    <frame>
      <ip>0x55E87C6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::ConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x55EF014</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>DefaultConfigCategory::DefaultConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1497</line>
    </frame>
    <frame>
      <ip>0x20BC81</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>376 bytes in 1 blocks are still reachable in loss record 124 of 149</text>
    <leakedbytes>376</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x5AB4DF0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libservices-common-lib.so.1</obj>
      <fn>ManagementApi::ManagementApi(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/common</dir>
      <file>management_api.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x2092FC</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>306</line>
    </frame>
    <frame>
      <ip>0x2089D8</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>main</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>189</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>448 bytes in 1 blocks are still reachable in loss record 125 of 149</text>
    <leakedbytes>448</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x24F100</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session::Session(unsigned long, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>201</line>
    </frame>
    <frame>
      <ip>0x24E697</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void __gnu_cxx::new_allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>136</line>
    </frame>
    <frame>
      <ip>0x24D261</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::allocator_traits&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; &gt;::construct&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;&amp;, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>475</line>
    </frame>
    <frame>
      <ip>0x24A120</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Sp_counted_ptr_inplace&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>526</line>
    </frame>
    <frame>
      <ip>0x246FDA</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session*, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>637</line>
    </frame>
    <frame>
      <ip>0x241A4B</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::__shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr_base.h</file>
      <line>1295</line>
    </frame>
    <frame>
      <ip>0x23DEF6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;::shared_ptr&lt;std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>344</line>
    </frame>
    <frame>
      <ip>0x239047</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; std::allocate_shared&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(std::allocator&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; const&amp;, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>691</line>
    </frame>
    <frame>
      <ip>0x232FE9</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session&gt; std::make_shared&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Session, unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(unsigned long&amp;, std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Connection&gt;&amp;&amp;, std::unique_ptr&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt;, std::default_delete&lt;boost::asio::basic_streambuf&lt;std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>shared_ptr.h</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x22CD63</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::request(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;, std::function&lt;void (std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>238</line>
    </frame>
    <frame>
      <ip>0x226146</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::shared_ptr&lt;SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::Response&gt; SimpleWeb::ClientBase&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::stream_socket_service&lt;boost::asio::ip::tcp&gt; &gt; &gt;::sync_request&lt;boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::basic_string_ref&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::unordered_multimap&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, SimpleWeb::CaseInsensitiveHash, SimpleWeb::CaseInsensitiveEqual, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north/../../thirdparty/Simple-Web-Server</dir>
      <file>client_http.hpp</file>
      <line>437</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>448 bytes in 4 blocks are still reachable in loss record 126 of 149</text>
    <leakedbytes>448</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20452D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x20351D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x201D11</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x55F5D79</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
    <frame>
      <ip>0x55F4B45</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>105</line>
    </frame>
    <frame>
      <ip>0x55F3845</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>954</line>
    </frame>
    <frame>
      <ip>0x55EBDC0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::CategoryItem::CategoryItem(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rapidjson::GenericValue&lt;rapidjson::UTF8&lt;char&gt;, rapidjson::MemoryPoolAllocator&lt;rapidjson::CrtAllocator&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1031</line>
    </frame>
    <frame>
      <ip>0x55E87C6</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>ConfigCategory::ConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>153</line>
    </frame>
    <frame>
      <ip>0x55EF014</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/lib/libcommon-lib.so.1</obj>
      <fn>DefaultConfigCategory::DefaultConfigCategory(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/common</dir>
      <file>config_category.cpp</file>
      <line>1497</line>
    </frame>
    <frame>
      <ip>0x20BC81</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::loadPlugin()</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>565</line>
    </frame>
    <frame>
      <ip>0x2096E0</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>NorthService::start(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, unsigned short)</fn>
      <dir>/home/mohit/work/fledge/tests/system/memory_leak/fledge/C/services/north</dir>
      <file>north.cpp</file>
      <line>335</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>448 bytes in 4 blocks are still reachable in loss record 127 of 149</text>
    <leakedbytes>448</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C3217F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x20452D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate(unsigned long, void const*)</fn>
      <dir>/usr/include/c++/7/ext</dir>
      <file>new_allocator.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x20351D</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>alloc_traits.h</file>
      <line>436</line>
    </frame>
    <frame>
      <ip>0x201D11</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate(unsigned long)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>stl_vector.h</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x200737</ip>
      <obj>/home/mohit/work/fledge/tests/system/memory_leak/fledge/cmake_build/C/services/north/fledge.services.north</obj>
      <fn>void std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/usr/include/c++/7/bits</dir>
      <file>vector.tcc</file>
      <line>406</line>
    </frame>
